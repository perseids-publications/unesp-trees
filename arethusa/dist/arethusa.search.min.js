/*
 * Arethusa - a backend-independent client-side annotation framework
 * http://github.com/alpheios-project/arethusa
 *
 * Version 0.2.5
 * built from branch widget
 * at 0a82a2ad9cc7468ea781bfa023a1dddbd77130c6
 * on 2020-12-07T15:20:56.224Z
 *
 * Published under the MIT license
 */

"use strict";angular.module("arethusa.search",[]),angular.module("arethusa.search").directive("pluginSearch",function(){return{restrict:"AE",scope:!0,replace:!0,link:function(a,b,c){a.plugin=a.$eval(c.pluginSearch),a.template="js/arethusa."+a.plugin.name+"/templates/search.html"},template:'<div ng-include="template"></div>'}}),angular.module("arethusa.search").directive("searchByString",["search","state","sidepanel",function(a,b,c){return{restrict:"A",scope:{},link:function(d,e,f){function g(b,c){var e=d.$new();e.token=b,e.$watch("token.string",function(d,e){d!==e&&(a.removeTokenFromIndex(b.id,e),a.collectTokenString(a.strings,c,b))}),i[c]=e}function h(){angular.forEach(b.tokens,g)}d.search=a,d.state=b;var i={};d.$watch("state.tokens",function(a,b){h()});var j=e.find("input")[0],k=e.parents("#sidepanel")[0];d.$watch("search.focusStringSearch",function(b,d){b&&(k&&c.folded&&c.toggle(),j.focus(),a.focusStringSearch=!1)})},templateUrl:"js/arethusa.search/templates/search_by_string.html"}}]),angular.module("arethusa.search").service("search",["state","configurator","keyCapture","plugins","languageSettings",function(a,b,c,d,e){function f(){var a=["queryByRegex"];b.getConfAndDelegate(r),b.getStickyConf(r,a),r.focusStringSearch=!1,r.greekRegex=c.conf("regex").greek}function g(b){var c=[],d={};return angular.forEach(r.strings,function(e,f){angular.forEach(e,function(e){if(!d[e]){var g=a.getPreviousTokens(e,1),h=a.getNextTokens(e,1),i=h.length>0?h[0].string:null,j=g.length>0?g[0].string:null,k=r.compareWordsWithContext(f,j,i,b);if(k.match){d[e]=1;var l={id:e};k.combine<0?(d[g[0].id]=1,l.includePrevious=g[0].id):k.combine>0&&(l.includeNext=h[0].id,d[h[0].id]=1),c.push(l)}}})}),c}function h(b,c){var d=0,e=n(c);if(e.length>0)for(var f=a.getPreviousTokens(b),g=f.length-1,h=e.length-1;h>=0;h--){var i=j(f,g);if(i.word){var k=r.compareWordsWithContext(i.word,i.prev,i.next,e[h]);k.match&&(g--,d++,k.combine<0&&(g+=k.combine))}}return d}function i(b,c){var d=0,e=n(c);if(e.length>0)for(var f=a.getNextTokens(b),g=0,h=0;h<f.length;h++){var i=j(f,g);if(i.word){var k=r.compareWordsWithContext(i.word,i.prev,i.next,e[h]);k.match&&(g++,d++,k.combine>0&&(g-=k.combine))}}return d}function j(a,b){var c={};return a[b]&&(c.word=a[b].string,c.next=a[b+1]?a[b+1].string:"",c.prev=b>0&&a[b-1]?a[b-1].string:""),c}function k(a){return a.replace(/^-/,"").replace(/-$/,"")}function l(a,b){return m(a)===m(b)}function m(a){return a&&(a=a.normalize("NFC"),r.language&&"gr"===r.language.lang?a=a.replace(/\u2019$/,"á¾½"):r.language&&"la"===r.language.lang&&(a=a.replace(/[\u00c0\u00c1\u00c2\u00c3\u00c4\u0100\u0102]/g,"A"),a=a.replace(/[\u00c8\u00c9\u00ca\u00cb\u0112\u0114]/g,"E"),a=a.replace(/[\u00cc\u00cd\u00ce\u00cf\u012a\u012c]/g,"I"),a=a.replace(/[\u00d2\u00d3\u00d4\u00df\u00d6\u014c\u014e]/g,"O"),a=a.replace(/[\u00d9\u00da\u00db\u00dc\u016a\u016c]/g,"U"),a=a.replace(/[\u00c6\u01e2]/g,"AE"),a=a.replace(/[\u0152]/g,"OE"),a=a.replace(/[\u00e0\u00e1\u00e2\u00e3\u00e4\u0101\u0103]/g,"a"),a=a.replace(/[\u00e8\u00e9\u00ea\u00eb\u0113\u0115]/g,"e"),a=a.replace(/[\u00ec\u00ed\u00ee\u00ef\u012b\u012d\u0129]/g,"i"),a=a.replace(/[\u00f2\u00f3\u00f4\u00f5\u00f6\u014d\u014f]/g,"o"),a=a.replace(/[\u00f9\u00fa\u00fb\u00fc\u016b\u016d]/g,"u"),a=a.replace(/[\u00e6\u01e3]/g,"ae"),a=a.replace(/[\u0153]/g,"oe"))),a}function n(a){return a.split(/\s+/)}function o(){return arethusaUtil.inject({},a.tokens,r.collectTokenString)}function p(){d.setActive(r),r.focusStringSearch=!0}function q(){return arethusaUtil.inject([],d.all,function(a,b,c){c.canSearch&&a.push(c)})}var r=this;this.name="search",this.defaultConf={displayName:"selector",queryByRegex:!0},this.findByRegex=function(a){angular.forEach(r.greekRegex,function(b,c){var d=new RegExp(c,"g");a=a.replace(d,b)});var b=new RegExp(a,"i");return arethusaUtil.inject([],r.strings,function(a,c,d){c.match(b)&&arethusaUtil.pushAll(a,d)})},this.queryWordInContext=function(a,b,c){var d=g(a);if(d.length>1){angular.forEach(d,function(a){a.matchedPrefix=0,a.matchedSuffix=0;var d=a.includePrevious?a.includePrevious:a.includeNext?a.includeNext:a.id;a.matchedPrefix=h(d,b),a.matchedSuffix=i(d,c)});var e=0,f=0,j=[];angular.forEach(d,function(a){a.matchedPrefix>e&&a.matchedSuffix>f||a.matchedPrefix==e&&a.matchedSuffix>f||a.matchedPrefix>e&&a.matchedSuffix==f?(e=a.matchedPrefix,f=a.matchedSuffix,j=[a]):a.matchedPrefix==e&&a.matchedSuffix==f&&j.push(a)})}else j=d;var k=[];return angular.forEach(j,function(a){k.push(a.id),a.includePrevious&&k.push(a.includePrevious),a.includeNext&&k.push(a.includeNext)}),k},this.compareWordsWithContext=function(a,b,c,d){var e=l(a,d),f=0;if(!e&&c){e=l(a+k(c),d),e&&(f=1)}if(!e&&b){var g=k(b);b&&((e=l(g+a,d))||(e=l(a+g,d))),e&&(f=-1)}if(!e){var h=k(a);b&&(e=l(b+h,d),e||(e=l(h+b,d)),e&&(f=-1)),!e&&c&&(e=l(h+c,d),e||(e=l(c+h,d)),e&&(f=1))}return{match:e,combine:f}},this.queryTokens=function(){if(""===r.tokenQuery)return void a.deselectAll();var b=r.tokenQuery.split(" "),c=arethusaUtil.inject([],b,function(a,b){var c=r.queryByRegex?r.findByRegex(b):r.strings[b];arethusaUtil.pushAll(a,c)});a.multiSelect(c)},this.collectTokenString=function(a,b,c){var d=c.string;a[d]||(a[d]=[]),a[d].push(b)},this.removeTokenFromIndex=function(a,b){var c=r.strings[b];c.splice(c.indexOf(a),1),0===c.length&&delete r.strings[b]},a.on("tokenAdded",function(a,b){r.collectTokenString(r.strings,b.id,b)}),a.on("tokenRemoved",function(a,b){r.removeTokenFromIndex(b.id,b.string)}),c.initCaptures(function(a){return{search:[a.create("focus",p,"A")]}}),this.init=function(){f(),r.searchPlugins=q(),r.strings=o(),r.tokenQuery="",r.language=e.getFor("treebank")}}]),angular.module("arethusa.search").run(["$templateCache",function(a){a.put("js/arethusa.search/templates/search_by_string.html",'<div class="row">\n  <div class="small-12 columns">\n    <label>\n      <span translate="search.searchByToken"/>\n      <div class="row collapse">\n        <div class="small-10 columns">\n          <input type="search"\n            foreign-keys\n            ng-change="search.queryTokens()"\n            ng-model="search.tokenQuery" />\n        </div>\n        <div class="small-2 columns">\n          <label class="postfix">\n            regex\n            <input\n              id="regex-checkbox"\n              type="checkbox"\n              ng-change="search.queryTokens()"\n              ng-model="search.queryByRegex"/>\n          </label>\n        </div>\n      </div>\n    </label>\n  </div>\n</div>\n')}]);
//# sourceMappingURL=arethusa.search.min.map