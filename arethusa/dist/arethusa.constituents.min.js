/*
 * Arethusa - a backend-independent client-side annotation framework
 * http://github.com/alpheios-project/arethusa
 *
 * Version 0.2.5
 * built from branch widget
 * at 0a82a2ad9cc7468ea781bfa023a1dddbd77130c6
 * on 2020-12-07T15:20:56.224Z
 *
 * Published under the MIT license
 */

"use strict";angular.module("arethusa.constituents",[]),angular.module("arethusa.constituents").directive("constituencyTree",["Tree","globalStore","commons","$compile",function(a,b,c,d){function e(){}var f="000-constituent-";return{restrict:"A",scope:{tokens:"=",styles:"="},link:function(g,h,i){function j(a){return new RegExp("^"+f).exec(a)?a:f+a}function k(a){var b=a.id,c=j(b);v[c]=a}function l(a){return'<div class="node constituent-node" id="cph'+a.id+'">xxxx - xxxx</div>'}function m(a){a.isToken?x.createNode(a):x.g.addNode(a.id,{label:l(a)})}function n(a,b){x.g.addEdge(a,a,b)}function o(a){var d=a.id;if(angular.isDefined(d))if(x.nodePresent(d)||(m(a),a.isConstituent&&k(a)),a.isToken){var e=f+d;if(!x.nodePresent(e)){var g=c.constituent(null,a.constituency.role,e,a.sentenceId,a.constituency.parent);o(g),n(d,e)}}else{var h=a.parent;if(!h)return;if(!x.nodePresent(h)){var i=b.constituents[h];k(i),o(i)}n(d,h)}}function p(){x.insertTokenDirectives(),q()}function q(){r().append(function(){this.textContent="";var a=this.id.slice(3);return s(v[j(a)])})}function r(){return x.vis.selectAll("div.node.constituent-node")}function s(a){var b=g.$new();return x.childScopes.push(b),b.constituent=a,d(y)(b)[0]}function t(){g.nodeSep=20,g.edgeSep=7,g.rankSep=10}function u(){g.nodeSep=30,g.edgeSep=10,g.rankSep=30}var v={},w="constituency.parent",x=new a(g,h,{mainAttribute:w,parentPlugin:"constituents",direction:"vertical"}),y='<span constituent="constituent"/>';x.drawEdge=o,x.insertEdgeDirectives=e,x.insertNodeDirectives=p,x.compactTree=t,x.wideTree=u,x.launch()}}}]),angular.module("arethusa.constituents").directive("constituent",[function(){var a=["class","role"];return{restrict:"A",scope:{constituent:"="},link:function(b,c,d){function e(){b.label=arethusaUtil.inject([],a,function(a,c){var d=b.constituent[c];d&&a.push(d)}).join(" - ")}for(var f=a.length-1;f>=0;f--){var g=a[f];b.$watch("constituent."+g,e)}},template:'<div class="center">{{ label }}</div>'}}]),angular.module("arethusa.constituents").service("constituents",["state","configurator",function(a,b){function c(){b.getConfAndDelegate(d)}var d=this;this.name="constituents",this.defaultConf={template:"js/arethusa.constituents/templates/constituents.html"},this.init=function(){c()}}]),angular.module("arethusa.constituents").run(["$templateCache",function(a){a.put("js/arethusa.constituents/templates/constituents.html",'<div class="tree-canvas">\n  <div class="tree-settings">\n    <span\n      class="note right settings-span-button"\n      style="margin-left: 10px"\n      unused-token-highlighter\n      uth-check-property="constituency.parent">\n    </span>\n  </div>\n\n  <div\n    lang-specific\n    constituency-tree\n    tokens="state.tokens"\n    styles="plugin.diffStyles()"\n    to-bottom>\n  </div>\n</div>\n')}]);
//# sourceMappingURL=arethusa.constituents.min.map