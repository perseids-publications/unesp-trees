/*
 * Arethusa - a backend-independent client-side annotation framework
 * http://github.com/alpheios-project/arethusa
 *
 * Version 0.2.5
 * built from branch widget
 * at 0a82a2ad9cc7468ea781bfa023a1dddbd77130c6
 * on 2020-12-07T15:20:56.224Z
 *
 * Published under the MIT license
 */

"use strict";angular.module("arethusa.depTree",[]),angular.module("arethusa.depTree").directive("depTreeNavigator",["$timeout",function(a){return{restrict:"A",link:function(a,b,c){function d(){var b=[];if(a.groupSize>1)for(var c=0;c<a.groupSize;c++)b.push(c);a.focusTriggers=b}a.$watch("groupSize",function(a,b){d()}),a.setCurrentFocus=function(b){a.currentFocus=b}},templateUrl:"js/arethusa.dep_tree/templates/dep_tree_navigator.html"}}]),angular.module("arethusa.depTree").directive("dependencyTree",["Tree",function(a){return{restrict:"A",scope:{tokens:"=",styles:"="},link:function(b,c,d){new a(b,c,{mainAttribute:"head.id",parentPlugin:"depTree",syntheticRoot:!0}).launch()}}}]),angular.module("arethusa.depTree").directive("treeSetting",function(){return{restrict:"A",scope:{title:"@",val:"=treeSetting"},link:function(a,b,c){a.increment=function(){a.val++},a.decrement=function(){a.val--}},templateUrl:"js/arethusa.dep_tree/templates/tree_setting.html"}}),angular.module("arethusa.depTree").service("depTree",["state","configurator","globalSettings","notifier","translator","idHandler",function(a,b,c,d,e,f){function g(){b.getConfAndDelegate(s),s.diffMode=!1,s.diffPresent=!1,s.diffInfo={}}function h(a){return arethusaUtil.inject({},a,function(a,b,c){var d=c.diff;d&&(a[b]=i(d))})}function i(a){return arethusaUtil.inject({},a,function(a,b,c){"relation"===b?a.label={color:"red"}:"head"===b?a.edge={stroke:"red","stroke-width":"1px"}:a.token={color:"red"}})}function j(){angular.forEach(a.tokens,k)}function k(a){a.head||(a.head={})}function l(a){return a.head.id}function m(b){var c,d=b.sentenceId,e=b.id,f=[];for(var g in a.clickedTokens){var h=a.getToken(g);if(h.sentenceId!==d){c=!0;break}e!==g&&f.push(h)}return c?"err":!!f.length&&f}function n(b,c){o(c,b)&&a.change(c,"head.id",b.head.id),a.change(b,"head.id",c.id)}function o(b,c){for(var d=b,e=aU.getProperty(d,"head.id"),f=c.id,g=!1;!g&&d&&e;)f===e?g=!0:(d=a.getToken(e),e=!!d&&aU.getProperty(d,"head.id"));return g}function p(a){s.changeHead(a)||c.defaultClickAction(a)}function q(b,c){return!a.isSelected(b)&&a.hasClickSelections()&&!c.ctrlKey}function r(){return{mouseenter:function(a,b,c){q(a,c)&&b.addClass("copy-cursor")},mouseleave:function(a,b,c){b.removeClass("copy-cursor")}}}var s=this;this.name="depTree",this.externalDependencies={ordered:["vendor/d3-3.4.13/d3.min.js",window.dagred3path]},this.toggleDiff=function(){s.diffMode=!s.diffMode},this.diffStyles=function(){return!!s.diffMode&&s.diffInfo},a.on("diffLoaded",function(){s.diffPresent=!0,s.diffInfo=h(a.tokens),s.diffMode=!0}),a.on("tokenAdded",function(a,b){k(b)}),a.on("tokenRemoved",function(b,c){l(c)&&s.disconnect(c);var d=c.id;angular.forEach(a.tokens,function(a,b){a.head.id===d&&s.disconnect(a)})}),this.disconnect=function(b){a.change(b,"head.id","")},this.toRoot=function(b){var c=f.getId("0",b.sentenceId);a.change(b,"head.id",c)};var t={};e("depTree.errorAcrossSentences",t,"errorAcrossSentences"),this.changeHead=function(b){var c=angular.isString(b)?a.getToken(b):b,e=m(c);return!!e&&("err"===e?void d.error(t.errorAcrossSentences):(a.doBatched(function(){angular.forEach(e,function(a,b){n(a,c)})}),!0))};var u="change head";c.addClickAction(u,p,r()),c.deselectAfterAction("head.id"),this.init=function(){g(),j(),"editor"===s.mode&&c.setClickAction(u)}}]),angular.module("arethusa.depTree").service("subtreeFinder",function(){function a(a){var b={};return b[a]=!0,h[a]=b,b}function b(a){return h.hasOwnProperty(a)}function c(a){var b=h[a];return delete h[a],b}function d(d,e){b(d)||a(d);var f=h[d],g=b(e)?c(e):a(e);angular.extend(f,g)}function e(){angular.forEach(h,function(a,b){1===Object.keys(a).length&&delete h[b]})}function f(){return arethusaUtil.inject({},h,function(a,b,c){a[b]=g(b,c)})}function g(a,d){var e={};return angular.extend(e,d),angular.forEach(d,function(d,f){if(a!==f&&b(f)){var h=c(f),i=g(f,h);angular.extend(e,i)}}),e}var h;this.find=function(b){return h={},a("0000"),angular.forEach(b,function(b,c){(b.head||{}).id?d(b.head.id,b.id):a(b.id)}),e(),f()}}),angular.module("arethusa.depTree").run(["$templateCache",function(a){a.put("js/arethusa.dep_tree/templates/context_menu.html",'<div class="button-group">\n  <span class="button micro radius" ng-click="plugin.disconnect(token)" translate="tree.disconnect" />\n  <span class="button micro radius" ng-click="plugin.toRoot(token)" translate="tree.toRoot" />\n  <span class="button micro radius" ng-click="plugin.changeHead(token.id)" translate="tree.makeHead" />\n</div>\n'),a.put("js/arethusa.dep_tree/templates/dep_tree_navigator.html",'<div class="left tree-focus-trigger-controls" to-bottom>\n  <div\n    ng-repeat="trigger in focusTriggers"\n    class="tree-focus-trigger clickable"\n    ng-class="{ \'tree-focus-sel\': trigger === currentFocus }"\n    ng-click="setCurrentFocus(trigger)">\n  </div>\n<div/>\n'),a.put("js/arethusa.dep_tree/templates/settings.html",'<span\n  title="{{ translations.compact() }}"\n  class="settings-span-button"\n  ng-click="compactTree()">\n  <i class="fa fa-compress"></i>\n</span>\n<span\n  title="{{ translations.widen() }}"\n  class="settings-span-button"\n  ng-click="wideTree()">\n  <i class="fa fa-expand"></i>\n</span>\n<span\n  title="{{ translations.changeDir() }} {{ keyHints.directionChange }}"\n  class="settings-span-button"\n  ng-click="changeDir()">\n  <i class="fi-loop rotate-on-hover"></i>\n</span>\n<span\n  title="{{ translations.focusRoot() }}"\n  class="settings-span-button"\n  ng-click="focusRoot()">\n  <i class="fa fa-crosshairs rotate-on-hover"></i>\n</span>\n<span\n  title="{{ translations.focusSel() }} {{ keyHints.focusSelection}}"\n  class="settings-span-button"\n  ng-click="focusSelection()">\n  <i class="fi-target-two rotate-on-hover"></i>\n</span>\n<span\n  title="{{ translations.centerTree() }} {{ keyHints.centerTree }}"\n  class="settings-span-button"\n  ng-click="centerGraph()">\n  <i class="fa fa-dot-circle-o"></i>\n</span>\n<span\n  title="{{ translations.perfectWidth() }} {{ keyHints.perfectWidth }}"\n  class="settings-span-button"\n  ng-click="perfectWidth()">\n  <i class="fa fa-arrows-h"></i>\n</span>\n\n'),a.put("js/arethusa.dep_tree/templates/tree_setting.html",'<span>\n  <span class="note">{{ title }}</span>\n  <input style="display: inline; height: 1.2rem; width: 3rem" type="text" ng-model="val"/> \n  <span ng-click="increment()">+</span>\n  <span ng-click="decrement()">-</span>\n</span>\n')}]);
//# sourceMappingURL=arethusa.dep_tree.min.map