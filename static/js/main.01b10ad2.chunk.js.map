{"version":3,"sources":["components/Collection/Collection.module.css","components/Instructions/GettingStarted/fork.png","components/Instructions/GettingStarted/forked.png","components/Instructions/GettingStarted/actions-enable.png","components/Instructions/GettingStarted/package.png","components/Instructions/GettingStarted/edit.png","components/Instructions/GettingStarted/homepage.png","components/Instructions/GettingStarted/settings.png","components/Instructions/GettingStarted/ghpages.png","components/Instructions/GettingStarted/config.png","components/Instructions/GettingStarted/config-edit.png","components/Instructions/GettingStarted/progress.png","components/Instructions/GettingStarted/success.png","components/Instructions/GettingStarted/site.png","components/Instructions/GettingStarted/env.png","components/Instructions/GettingStarted/upload.png","components/Instructions/GettingStarted/mytrees-config.png","components/Instructions/GettingStarted/mytrees-site.png","components/Instructions/Doi/doi.png","components/Instructions/Doi/zenodo-home.png","components/Instructions/Doi/zenodo-login.png","components/Instructions/Doi/zenodo-connect.png","components/Instructions/Doi/zenodo-switch.png","components/Instructions/Doi/zenodo-select-upload.png","components/Instructions/Doi/zenodo-upload-list.png","components/Instructions/Doi/zenodo-upload.png","components/Instructions/Doi/github-select-actions.png","components/Instructions/Doi/github-select-release.png","components/Instructions/Doi/github-run-workflow.png","components/Instructions/Doi/github-workflow-inputs.png","components/Instructions/Doi/github-edit-file.png","components/Instructions/Doi/github-visual-editor.png","components/Instructions/Updating/actions.png","components/Instructions/Updating/update.png","components/Instructions/Updating/run-workflow.png","components/EmbeddedTreebank/EmbeddedTreebank.module.css","components/Hero/Hero.module.css","components/ControlPanel/ControlPanel.module.css","components/Instructions/Instructions.module.css","lib/types.js","components/Header/Header.js","components/Header/index.js","components/Markdown/Markdown.js","components/Markdown/index.js","components/Hero/Hero.js","components/Hero/index.js","components/Collection/Collection.js","components/Collection/index.js","components/Home/Home.js","components/Home/index.js","components/Instructions/InstructionsHeader/InstructionsHeader.js","components/Instructions/InstructionsHeader/index.js","components/Instructions/GettingStarted/GettingStarted.js","components/Instructions/GettingStarted/index.js","components/Instructions/Doi/Doi.js","components/Instructions/Doi/index.js","components/Instructions/Updating/Updating.js","components/Instructions/Updating/index.js","components/NotFound/NotFound.js","components/NotFound/index.js","components/Instructions/Instructions.js","components/Instructions/index.js","components/ArethusaWrapper/ArethusaConfig.js","components/ArethusaWrapper/ArethusaWrapper.js","components/ArethusaWrapper/index.js","components/ControlPanel/ControlPanel.js","components/ControlPanel/index.js","components/TreebankStyles/TreebankStyles.js","components/TreebankStyles/index.js","lib/params.js","components/Treebank/TreebankArethusa.js","components/Treebank/TreebankReact.js","components/Treebank/Treebank.js","components/Treebank/index.js","components/Publication/Publication.js","components/Publication/index.js","components/PublicationDirector/PublicationDirector.js","components/PublicationDirector/index.js","components/PublicationGroup/PublicationGroup.js","components/PublicationGroup/index.js","components/PublicationGroupDirector/PublicationGroupDirector.js","components/PublicationGroupDirector/index.js","components/Page/Page.js","components/Page/index.js","components/TreebankService/TreebankService.js","components/TreebankService/index.js","components/EmbeddedTreebank/EmbeddedTreebank.js","components/EmbeddedTreebank/index.js","components/EmbeddedPublication/EmbeddedPublication.js","components/EmbeddedPublication/index.js","components/EmbeddedNotFound/EmbeddedNotFound.js","components/EmbeddedNotFound/index.js","components/EmbeddedPublicationDirector/EmbeddedPublicationDirector.js","components/EmbeddedPublicationDirector/index.js","components/Embedded/Embedded.js","components/Embedded/index.js","components/App/App.js","components/App/index.js","serviceWorker.js","index.js","components/Treebank/Treebank.module.css","components/Instructions/GettingStarted/commit.png","components/Instructions/Doi/zenodo-authorize.png","components/Instructions/Doi/zenodo-dropdown.png","components/Publication/Publication.module.css"],"names":["module","exports","chunksType","shape","start","number","end","numbers","arrayOf","oneOfType","string","sectionType","locus","isRequired","path","xml","link","license","notes","chunks","publicationType","author","work","editors","hidden","bool","collapsed","sections","collectionType","title","element","text","publications","Header","logo","subtitle","copyright","doi","report","github","twitter","collections","treebankReact","search","params","chunk","publication","w","config","children","undefined","props","href","defaultProps","transformLinkUri","uri","uriTransformer","process","Markdown","Hero","className","styles","jumbotronSmall","source","renderSubtitle","renderSections","key","to","map","s","section","getStart","renderSection","renderRow","expanded","scope","Array","isArray","e","renderEditors","Collection","collection","p","Home","c","renderCollection","InstructionsHeader","Component","constructor","super","this","state","toggleNavbar","bind","setState","render","NavbarToggler","onClick","aria-label","Collapse","isOpen","navbar","exact","GettingStarted","instructions","target","rel","list","fork","src","alt","forked","actionsEnable","packageJson","edit","homepage","commit","settings","ghpages","configuration","configEdit","progress","success","site","env","upload","myTreesConfig","myTreesSite","Doi","zenodoHome","zenodoLogin","zenodoAuthorize","zenodoDropdown","zenodoConnect","zenodoSwitch","githubSelectActions","githubSelectRelease","githubRunWorkflow","githubWorkflowInputs","zenodoSelectUpload","zenodoUploadList","zenodoUpload","githubEditFile","githubVisualEditor","Updating","actions","update","runWorkflow","NotFound","Instructions","component","defaultConfig","main","debug","showKeys","chunkParam","auxConfPath","retrievers","TreebankRetriever","resource","docIdentifier","preselector","plugins","layouts","name","template","notifier","disable","navigator","chunkSize","resources","Gardener","route","lexInvFusekiEndpoint","morphologyServiceLat","newMorphologyServiceLat","morphologyServiceGrc","newMorphologyServiceGrc","morphologyServicePer","citeMapper","sgGrammar","depTree","contextMenu","contextMenuTemplate","morph","BspMorphRetriever","lexicalInventory","retriever","LexicalInventoryRetriever","matchAll","noRetrieval","regex","relation","advancedMode","relations","keyCapture","greek","α","ε","η","ι","ο","υ","ω","keys","sidepanelConfig","JSON","parse","stringify","remoteUrl","ArethusaWrapper","doc","window","Arethusa","$","a","b","widget","sort","join","gotoSentence","remove","removeToastContainer","on","from","with","getConfig","api","words","getSubdoc","getMorph","sentenceId","wordId","refreshView","findWord","word","prefix","suffix","min","max","ControlPanel","refIsOpen","settingsIsOpen","getLines","getFbcnl","createLink","toggleRefOpen","toggleSettingsOpen","renderSettingsLinks","renderBack","renderNext","lines","ii","push","match","index","Number","indexOf","length","getFbcnlFromNumbers","linkQuery","Object","entries","query","queryString","fullQuery","newConfig","first","back","current","visibility","String","next","last","id","dummyIcon","dropdownButton","type","aria-haspopup","aria-expanded","dropdownScroll","n","styleSheets","TreebankStyles","componentDidMount","st","convertToType","value","parsed","arrayFormat","result","forEach","prototype","hasOwnProperty","call","linkParams","additionalArgs","Treebank","renderArethusa","componentDidUpdate","location","arethusa","treebankContainer","loadedXml","fetch","then","response","setSubdoc","treebank","callback","subdoc","graph","TreebankReact","TreebankArethusa","publicationRow","t","renderText","Publication","arethusaLoaded","subDoc","document","body","addEventListener","prevProps","prevLocation","componentWillUnmount","removeEventListener","publicationPath","publicationLink","renderLocusRow","renderLinkRow","markdown","treebankWrapper","PublicationDirector","argsLookup","args","PublicationGroup","PublicationGroupDirector","Page","targetIframeID","targetURL","commModes","Destination","RECEIVE","error","request","message","code","ResponseMessage","Error","redirectLink","wordIds","queryParams","TreebankService","redirectTo","messageHandler","setArethusaLoaded","destination","receiverCB","service","MessagingService","deregister","responseFn","Success","status","errorCodes","UNKNOWN_REQUEST","err","INTERNAL_ERROR","SERVICE_UNINITIALIZED","EmbeddedTreebank","links","EmbeddedPublication","EmbeddedNotFound","EmbeddedPublicationDirector","Embedded","App","basename","Boolean","hostname","ReactDOM","getElementById","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.01b10ad2.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"collection\":\"Collection_collection__1AxyD\",\"locus\":\"Collection_locus__2K5Td\"};","module.exports = __webpack_public_path__ + \"static/media/fork.fab11b34.png\";","module.exports = __webpack_public_path__ + \"static/media/forked.828a5a5f.png\";","module.exports = __webpack_public_path__ + \"static/media/actions-enable.2e3d7005.png\";","module.exports = __webpack_public_path__ + \"static/media/package.de357bcd.png\";","module.exports = __webpack_public_path__ + \"static/media/edit.b3e87798.png\";","module.exports = __webpack_public_path__ + \"static/media/homepage.0be4a1e3.png\";","module.exports = __webpack_public_path__ + \"static/media/settings.ae63df05.png\";","module.exports = __webpack_public_path__ + \"static/media/ghpages.8b4d5c51.png\";","module.exports = __webpack_public_path__ + \"static/media/config.e06a1998.png\";","module.exports = __webpack_public_path__ + \"static/media/config-edit.9b9465d0.png\";","module.exports = __webpack_public_path__ + \"static/media/progress.8a3839ba.png\";","module.exports = __webpack_public_path__ + \"static/media/success.690539fc.png\";","module.exports = __webpack_public_path__ + \"static/media/site.ea77d375.png\";","module.exports = __webpack_public_path__ + \"static/media/env.408d35ed.png\";","module.exports = __webpack_public_path__ + \"static/media/upload.d4ad75a5.png\";","module.exports = __webpack_public_path__ + \"static/media/mytrees-config.98d51d2b.png\";","module.exports = __webpack_public_path__ + \"static/media/mytrees-site.c3493316.png\";","module.exports = __webpack_public_path__ + \"static/media/doi.5b46cdd6.png\";","module.exports = __webpack_public_path__ + \"static/media/zenodo-home.e354765c.png\";","module.exports = __webpack_public_path__ + \"static/media/zenodo-login.62ffd98f.png\";","module.exports = __webpack_public_path__ + \"static/media/zenodo-connect.62ea78bf.png\";","module.exports = __webpack_public_path__ + \"static/media/zenodo-switch.1453a99e.png\";","module.exports = __webpack_public_path__ + \"static/media/zenodo-select-upload.c78e55f5.png\";","module.exports = __webpack_public_path__ + \"static/media/zenodo-upload-list.b830f564.png\";","module.exports = __webpack_public_path__ + \"static/media/zenodo-upload.f4d62915.png\";","module.exports = __webpack_public_path__ + \"static/media/github-select-actions.feecfdca.png\";","module.exports = __webpack_public_path__ + \"static/media/github-select-release.85ebaa3f.png\";","module.exports = __webpack_public_path__ + \"static/media/github-run-workflow.adc741b9.png\";","module.exports = __webpack_public_path__ + \"static/media/github-workflow-inputs.bd61b84b.png\";","module.exports = __webpack_public_path__ + \"static/media/github-edit-file.5a5915d2.png\";","module.exports = __webpack_public_path__ + \"static/media/github-visual-editor.d0d36514.png\";","module.exports = __webpack_public_path__ + \"static/media/actions.2e98128b.png\";","module.exports = __webpack_public_path__ + \"static/media/update.85dcf1c8.png\";","module.exports = __webpack_public_path__ + \"static/media/run-workflow.94623942.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"treebankContainer\":\"EmbeddedTreebank_treebankContainer__2X6pS\",\"links\":\"EmbeddedTreebank_links__1ndYN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"jumbotronSmall\":\"Hero_jumbotronSmall__IN8kP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dropdownButton\":\"ControlPanel_dropdownButton__1o6TV\",\"dropdownScroll\":\"ControlPanel_dropdownScroll__17rgQ\",\"dummyIcon\":\"ControlPanel_dummyIcon__3Nk3N\",\"link\":\"ControlPanel_link__OEqVs\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"instructions\":\"Instructions_instructions__3-4Tw\"};","import {\n  arrayOf,\n  bool,\n  element,\n  number,\n  oneOfType,\n  shape,\n  string,\n} from 'prop-types';\n\nexport const chunksType = shape({\n  start: number,\n  end: number,\n  numbers: arrayOf(oneOfType([string])),\n});\n\nexport const sectionType = shape({\n  locus: string.isRequired,\n  path: string.isRequired,\n  xml: string.isRequired,\n  link: string,\n  license: string,\n  notes: string,\n  chunks: chunksType.isRequired,\n});\n\nexport const publicationType = shape({\n  path: string.isRequired,\n  author: string.isRequired,\n  work: string.isRequired,\n  editors: oneOfType([string, arrayOf(string)]).isRequired,\n  hidden: bool,\n  collapsed: bool,\n  sections: arrayOf(sectionType).isRequired,\n});\n\nexport const collectionType = shape({\n  title: oneOfType([string, element]).isRequired,\n  text: string,\n  hidden: bool,\n  publications: arrayOf(publicationType),\n});\n\nexport const configType = shape({\n  logo: string,\n  link: string,\n  title: oneOfType([string, element]).isRequired,\n  subtitle: string.isRequired,\n  copyright: string,\n  doi: string,\n  report: string,\n  github: string,\n  twitter: string,\n  collections: arrayOf(collectionType).isRequired,\n  treebankReact: bool,\n});\n\nexport const locationType = shape({\n  search: string.isRequired,\n});\n\nexport const publicationMatchType = shape({\n  params: shape({\n    chunk: string.isRequired,\n  }).isRequired,\n});\n\nexport const publicationGroupMatchType = shape({\n  params: shape({\n    publication: string.isRequired,\n  }).isRequired,\n});\n\nexport const queryType = shape({\n  w: arrayOf(string),\n  config: string,\n});\n","import React from 'react';\nimport { string, node } from 'prop-types';\nimport { PerseidsHeader } from 'perseids-react-components';\n\nconst Header = ({ logo, link, children }) => {\n  if (link !== undefined) {\n    return <PerseidsHeader logo={logo} props={{ href: link }}>{children}</PerseidsHeader>;\n  }\n\n  return <PerseidsHeader logo={logo}>{children}</PerseidsHeader>;\n};\n\nHeader.propTypes = {\n  logo: string,\n  link: string,\n  children: node.isRequired,\n};\n\nHeader.defaultProps = {\n  logo: undefined,\n  link: undefined,\n};\n\nexport default Header;\n","import Header from './Header';\n\nexport default Header;\n","import React from 'react';\nimport ReactMarkdown, { uriTransformer } from 'react-markdown';\n\nconst transformLinkUri = (uri) => (\n  uriTransformer(uri[0] === '/' ? `${process.env.PUBLIC_URL}${uri}` : uri)\n);\n\nconst Markdown = (props) => (\n  <ReactMarkdown\n    {...props}\n    transformLinkUri={transformLinkUri}\n  />\n);\n\nexport default Markdown;\n","import Markdown from './Markdown';\n\nexport default Markdown;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport styles from './Hero.module.css';\n\nimport Markdown from '../Markdown';\n\nconst renderSubtitle = (subtitle) => (\n  <Markdown source={subtitle} />\n);\n\nconst Hero = ({ title, subtitle }) => (\n  <div className={`jumbotron jumbotron-fluid bg-dark ${styles.jumbotronSmall}`}>\n    <div className=\"container text-light\">\n      <h1 className=\"display-4\">\n        {title}\n      </h1>\n      {subtitle && renderSubtitle(subtitle)}\n    </div>\n  </div>\n);\n\nHero.propTypes = {\n  title: PropTypes.string.isRequired,\n  subtitle: PropTypes.string.isRequired,\n};\n\nexport default Hero;\n","import Hero from './Hero';\n\nexport default Hero;\n","import React, { Fragment } from 'react';\nimport { Link } from 'react-router-dom';\nimport {\n  arrayOf,\n  bool,\n  element,\n  oneOfType,\n  string,\n} from 'prop-types';\n\nimport { publicationType } from '../../lib/types';\n\nimport styles from './Collection.module.css';\n\nimport Markdown from '../Markdown';\n\nconst getStart = (chunks) => {\n  const { start, numbers } = chunks;\n\n  if (start) {\n    return start;\n  }\n\n  return numbers[0];\n};\n\nconst renderSection = (section) => {\n  const { locus, path, chunks } = section;\n  const start = getStart(chunks);\n\n  return (\n    <Fragment key={path}>\n      <a href={`${path}/${start}`}>\n        {locus}\n      </a>\n      <br />\n    </Fragment>\n  );\n};\n\nconst renderEditors = (editors) => {\n  if (Array.isArray(editors)) {\n    return (\n      <ul className=\"pl-1\">\n        {editors.map((e) => <li key={e}>{e}</li>)}\n      </ul>\n    );\n  }\n\n  return editors;\n};\n\nconst renderSections = (path, collapsed, sections) => {\n  if (collapsed) {\n    return (\n      <Fragment key={path}>\n        <Link to={path}>\n          View\n        </Link>\n        <br />\n      </Fragment>\n    );\n  }\n\n  return sections.map((s) => renderSection(s));\n};\n\nconst renderRow = (publication, expanded) => {\n  const {\n    path,\n    author,\n    work,\n    editors,\n    hidden,\n    collapsed,\n    sections,\n  } = publication;\n\n  if (hidden) {\n    return false;\n  }\n\n  return (\n    <tr className=\"d-flex\" key={path}>\n      <th className=\"col-md-3 d-none d-md-block\" scope=\"row\">{author}</th>\n      <td className=\"col-md-4 d-none d-md-block\">{work}</td>\n      <td className=\"col-8 col-sm-7 d-block d-md-none\">\n        <strong>{author}</strong>\n        ,\n        {' '}\n        <em>{work}</em>\n      </td>\n      <td className=\"col-md-3 col-lg-3 d-none d-md-block\">\n        {renderEditors(editors)}\n      </td>\n      <td className={`col-4 col-sm-5 col-md-2 col-lg-2 text-right ${styles.locus}`}>\n        {renderSections(path, !expanded && collapsed, sections)}\n      </td>\n    </tr>\n  );\n};\n\nconst Collection = ({\n  title, publications, text, expanded,\n}) => (\n  <div className={`container ${styles.collection}`}>\n    <div className=\"row pb-3\">\n      <div className=\"col-12\">\n        {title && <h2>{title}</h2>}\n        {text && <Markdown source={text} />}\n        <table className=\"table\">\n          {publications && (\n            <>\n              <thead className=\"thead-light\">\n                <tr className=\"d-flex\">\n                  <th className=\"col-md-3 d-none d-md-block\" scope=\"col\">Author</th>\n                  <th className=\"col-8 col-sm-7 col-md-4\" scope=\"col\">Work</th>\n                  <th className=\"col-md-3 col-lg-3 d-none d-md-block\" scope=\"col\">Editors</th>\n                  <th className=\"col-4 col-sm-5 col-md-2 col-lg-2\" scope=\"col\">Locus</th>\n                </tr>\n              </thead>\n              <tbody>\n                {publications.map((p) => renderRow(p, expanded))}\n              </tbody>\n            </>\n          )}\n        </table>\n      </div>\n    </div>\n  </div>\n);\n\nCollection.propTypes = {\n  title: oneOfType([string, element]).isRequired,\n  publications: arrayOf(publicationType),\n  text: string,\n  expanded: bool,\n};\n\nCollection.defaultProps = {\n  publications: undefined,\n  text: undefined,\n  expanded: false,\n};\n\nexport default Collection;\n","import Collection from './Collection';\n\nexport default Collection;\n","import React from 'react';\n\nimport { configType } from '../../lib/types';\n\nimport Header from '../Header';\nimport Hero from '../Hero';\nimport Collection from '../Collection';\n\nconst renderCollection = (collection) => {\n  const {\n    title, text, hidden, publications,\n  } = collection;\n\n  if (hidden) {\n    return false;\n  }\n\n  return (\n    <Collection\n      key={title}\n      title={title}\n      text={text}\n      publications={publications}\n    />\n  );\n};\n\nconst Home = ({ config }) => {\n  const {\n    logo,\n    link,\n    title,\n    subtitle,\n    collections,\n  } = config;\n\n  return (\n    <>\n      <Header logo={logo} link={link}>\n        {title}\n      </Header>\n      <Hero title={title} subtitle={subtitle} />\n      {collections.map((c) => renderCollection(c))}\n    </>\n  );\n};\n\nHome.propTypes = {\n  config: configType.isRequired,\n};\n\nexport default Home;\n","import Home from './Home';\n\nexport default Home;\n","import React, { Component } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport { NavbarToggler, Collapse } from 'reactstrap';\nimport { string } from 'prop-types';\n\nimport { configType } from '../../../lib/types';\n\nimport Header from '../../Header';\n\nclass InstructionsHeader extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = { collapsed: true };\n\n    this.toggleNavbar = this.toggleNavbar.bind(this);\n  }\n\n  toggleNavbar() {\n    this.setState(({ collapsed }) => ({ collapsed: !collapsed }));\n  }\n\n  render() {\n    const { title, config: { logo, link } } = this.props;\n    const { collapsed } = this.state;\n\n    return (\n      <Header logo={logo} link={link}>\n        <span className=\"mr-auto\">\n          {title}\n        </span>\n        <NavbarToggler onClick={this.toggleNavbar} aria-label=\"navigation menu\" />\n        <Collapse isOpen={!collapsed} navbar>\n          <ul className=\"navbar-nav ml-auto\">\n            <li className=\"nav-item\">\n              <NavLink exact className=\"nav-link\" to=\"/\">\n                Home\n              </NavLink>\n            </li>\n            <li className=\"nav-item\">\n              <NavLink exact className=\"nav-link\" to=\"/instructions/getting-started\">\n                Getting started\n              </NavLink>\n            </li>\n            <li className=\"nav-item\">\n              <NavLink exact className=\"nav-link\" to=\"/instructions/doi\">\n                DOI\n              </NavLink>\n            </li>\n            <li className=\"nav-item\">\n              <NavLink exact className=\"nav-link\" to=\"/instructions/updating\">\n                Updating\n              </NavLink>\n            </li>\n          </ul>\n        </Collapse>\n      </Header>\n    );\n  }\n}\n\nInstructionsHeader.propTypes = {\n  config: configType.isRequired,\n  title: string.isRequired,\n};\n\nexport default InstructionsHeader;\n","import InstructionsHeader from './InstructionsHeader';\n\nexport default InstructionsHeader;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport styles from '../Instructions.module.css';\n\nimport fork from './fork.png';\nimport forked from './forked.png';\nimport actionsEnable from './actions-enable.png';\nimport packageJson from './package.png';\nimport edit from './edit.png';\nimport homepage from './homepage.png';\nimport commit from './commit.png';\nimport settings from './settings.png';\nimport ghpages from './ghpages.png';\nimport configuration from './config.png';\nimport configEdit from './config-edit.png';\nimport progress from './progress.png';\nimport success from './success.png';\nimport site from './site.png';\nimport env from './env.png';\nimport upload from './upload.png';\nimport myTreesConfig from './mytrees-config.png';\nimport myTreesSite from './mytrees-site.png';\n\nimport { configType } from '../../../lib/types';\n\nimport InstructionsHeader from '../InstructionsHeader';\n\nconst GettingStarted = ({ config }) => (\n  <>\n    <InstructionsHeader config={config} title=\"Getting Started\" />\n    <div className={`container pt-3 pb-4 ${styles.instructions}`}>\n      <div className=\"row\">\n        <div className=\"col\">\n          <h2>Overview</h2>\n\n          <p>\n            These instructions walk you through the basics of getting started with\n            creating your own repository for publishing treebank data on GitHub using\n            the Perseids Publications Treebank Template.\n          </p>\n        </div>\n      </div>\n\n      <div className=\"row\">\n        <div className=\"col\">\n          <h2>Minimum Prerequisities</h2>\n\n          <ol>\n            <li>\n              Have some treebank data files to publish. Currently this publication\n              template requires treebank XML files that adhere to the\n              {' '}\n              <a\n                href=\"https://perseusdl.github.io/treebank_data/\"\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n              >\n                Perseus Ancient Greek and Latin Treebank (AGDT)\n              </a>\n              {' '}\n              Schema and one of the\n              {' '}\n              <a\n                href=\"https://github.com/alpheios-project/arethusa-configs/tree/master/configs\"\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n              >\n                tagsets\n              </a>\n              {' '}\n              supported by Arethusa. For more information on\n              compliant treebank data with Perseids and Arethusa see the\n              {' '}\n              <a href=\"https://perseids.org\" target=\"_blank\" rel=\"noopener noreferrer\">\n                Perseids\n              </a>\n              {' '}\n              website or email perseids at tufts dot edu.\n            </li>\n\n            <li>\n              Create an account on\n              {' '}\n              <a href=\"https://github.com\" target=\"_blank\" rel=\"noopener noreferrer\">\n                GitHub\n              </a>\n              .\n            </li>\n\n            <li>\n              Although not absolutely necessary just to get started, we recommend getting\n              familiar with how to use\n              {' '}\n              <a\n                href=\"https://help.github.com/en/github/getting-started-with-github\"\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n              >\n                GitHub and the Git version control system\n              </a>\n              {' '}\n              as well as having a basic understanding of how to edit and create\n              create\n              {' '}\n              <a\n                href=\"https://www.w3schools.com/js/js_json_intro.asp\"\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n              >\n                JSON\n              </a>\n              {' '}\n              files. Without these skills it may be difficult\n              for you to fully manage your treebank publication site and troubleshoot\n              any problems you might encounter with it.\n            </li>\n          </ol>\n        </div>\n      </div>\n\n      <div className=\"row\">\n        <div className=\"col\">\n          <h2>Instructions</h2>\n\n          <ol className={styles.list}>\n            <li>\n              <strong>\n                Fork the base Repository\n              </strong>\n              <ol>\n                <li>\n                  Log in to your GitHub account at\n                  {' '}\n                  <a href=\"https://github.com\" target=\"_blank\" rel=\"noopener noreferrer\">\n                    https://github.com\n                  </a>\n                  .\n                </li>\n                <li>\n                  Go to\n                  {' '}\n                  <a\n                    href=\"https://github.com/perseids-publications/treebank-template\"\n                    target=\"_blank\"\n                    rel=\"noopener noreferrer\"\n                  >\n                    https://github.com/perseids-publications/treebank-template\n                  </a>\n                  .\n                </li>\n                <li>\n                  Click the\n                  {' '}\n                  <code>Fork</code>\n                  {' '}\n                  button.\n\n                  <a href={fork} target=\"_blank\" rel=\"noopener noreferrer\">\n                    <img\n                      className=\"img-fluid img-thumbnail\"\n                      src={fork}\n                      alt=\"arrow pointing to fork button on GitHub page\"\n                    />\n                  </a>\n                  This puts a copy of the treebank-template repository into your own\n                  GitHub account.\n                </li>\n              </ol>\n            </li>\n            <li>\n              <strong>\n                Set Up GitHub Actions\n              </strong>\n              <ol>\n                <li>\n                  Immediately after forking the repository, you should be prompted\n                  by GitHub to enable actions on your repository.\n                  Click\n                  {' '}\n                  <code>\n                    Set Up Actions\n                  </code>\n                  .\n\n                  <a href={forked} target=\"_blank\" rel=\"noopener noreferrer\">\n                    <img\n                      className=\"img-fluid img-thumbnail\"\n                      src={forked}\n                      alt=\"GitHub page of repository after successful fork\"\n                    />\n                  </a>\n\n                </li>\n                <li>\n                  (If you aren&apos;t prompted, click on the\n                  {' '}\n                  <code>\n                    Actions\n                  </code>\n                  {' '}\n                  tab\n                  yourself anyway.)\n                </li>\n                <li>\n                  Click\n                  {' '}\n                  <code>\n                    I understand my workflows, go ahead and enable them\n                  </code>\n                  .\n\n                  <a href={actionsEnable} target=\"_blank\" rel=\"noopener noreferrer\">\n                    <img\n                      className=\"img-fluid img-thumbnail\"\n                      src={actionsEnable}\n                      alt=\"arrow pointing to the button on GitHub to enable Actions\"\n                    />\n                  </a>\n\n                  This step is necessary in order for GitHub to update your GitHub Pages\n                  site automatically whenever you update or add files to your repository.\n                  For more information on GitHub actions see\n                  {' '}\n                  <a href=\"https://help.github.com/en/actions\" target=\"_blank\" rel=\"noopener noreferrer\">\n                    GitHub Actions Help\n                  </a>\n                  .\n                </li>\n              </ol>\n            </li>\n            <li>\n              <strong>\n                Update the home page link for your site\n              </strong>\n              <ol>\n                <li>\n                  Click the\n                  {' '}\n                  <code>\n                    package.json\n                  </code>\n                  {' '}\n                  file in the root directory of\n                  the repository.\n\n                  <a href={packageJson} target=\"_blank\" rel=\"noopener noreferrer\">\n                    <img\n                      className=\"img-fluid img-thumbnail\"\n                      src={packageJson}\n                      alt=\"arrow pointing to package.json file on repository page on GitHub\"\n                    />\n                  </a>\n\n                </li>\n                <li>\n                  Click the\n                  {' '}\n                  <code>\n                    edit\n                  </code>\n                  {' '}\n                  icon.\n\n                  <a href={edit} target=\"_blank\" rel=\"noopener noreferrer\">\n                    <img\n                      className=\"img-fluid img-thumbnail\"\n                      src={edit}\n                      alt=\"arrow pointing to GitHub's edit button\"\n                    />\n                  </a>\n\n                </li>\n                <li>\n                  Replace\n                  {' '}\n                  <code>\n                    perseids-publications.github.io\n                  </code>\n                  {' '}\n                  with, e.g.,\n                  {' '}\n                  <code>\n                    yourgithubaccount.github.io\n                  </code>\n                  .\n                  That is, if your GitHub user name is &quot;janedoe&quot; you would change\n                  {' '}\n                  <code>\n                    https://perseids-publications.github.io/treebank-template/\n                  </code>\n                  {' '}\n                  to\n                  {' '}\n                  <code>\n                    https://janedoe.github.io/treebank-template/\n                  </code>\n                  .\n\n                  <a href={homepage} target=\"_blank\" rel=\"noopener noreferrer\">\n                    <img\n                      className=\"img-fluid img-thumbnail\"\n                      src={homepage}\n                      alt=\"GitHub's visual editor with homepage line highlighted\"\n                    />\n                  </a>\n\n                </li>\n                <li>\n                  Scroll to the bottom of the page to\n                  {' '}\n                  <code>\n                    Commit changes\n                  </code>\n                  {' '}\n                  and enter a message to describe your\n                  change to this file (e.g. something like &quot;Updated homepage link&quot;).\n                </li>\n                <li>\n                  Make sure the option\n                  {' '}\n                  <code>\n                    Commit directly to the master branch\n                  </code>\n                  {' '}\n                  is selected.\n\n                  <a href={commit} target=\"_blank\" rel=\"noopener noreferrer\">\n                    <img\n                      className=\"img-fluid img-thumbnail\"\n                      src={commit}\n                      alt=\"GitHub page for creating a manual commit with arrow pointing to commit option\"\n                    />\n                  </a>\n\n                </li>\n                <li>\n                  Click\n                  {' '}\n                  <code>\n                    Commit changes\n                  </code>\n                  .\n                </li>\n              </ol>\n            </li>\n            <li>\n              <strong>\n                Set Up GitHub Pages\n              </strong>\n              <ol>\n                <li>\n                  Click the\n                  {' '}\n                  <code>\n                    Settings\n                  </code>\n                  {' '}\n                  button.\n\n                  <a href={settings} target=\"_blank\" rel=\"noopener noreferrer\">\n                    <img\n                      className=\"img-fluid img-thumbnail\"\n                      src={settings}\n                      alt=\"GitHub settings page\"\n                    />\n                  </a>\n\n                </li>\n                <li>\n                  Scroll down to the\n                  {' '}\n                  <code>\n                    GitHub Pages\n                  </code>\n                  {' '}\n                  section of the page.\n                </li>\n                <li>\n                  Select\n                  {' '}\n                  <code>\n                    gh-pages branch\n                  </code>\n                  {' '}\n                  for the source from the\n                  dropdown.\n                  {' '}\n                  <strong>\n                    NOTE:\n                  </strong>\n                  {' '}\n                  it is important that you select the\n                  {' '}\n                  <code>\n                    gh-pages branch\n                  </code>\n                  {' '}\n                  option from the dropdown,\n                  {' '}\n                  <strong>\n                    even if\n                    its preselected\n                  </strong>\n                  .\n                  It seems that the process of actually selecting it is\n                  necessary to trigger GitHub to actually acknowledge the setting.\n                  After this, you should see a notice\n                  {' '}\n                  <code>\n                    Your site is ready to be\n                    published at https://youraccount.github.io/treebank-template\n                  </code>\n                  .\n\n                  <a href={ghpages} target=\"_blank\" rel=\"noopener noreferrer\">\n                    <img\n                      className=\"img-fluid img-thumbnail\"\n                      src={ghpages}\n                      alt=\"GitHub pages section of GitHub repository settings\"\n                    />\n                  </a>\n\n                </li>\n              </ol>\n            </li>\n            <li>\n              <strong>\n                Update Site Details\n              </strong>\n              <ol>\n                <li>\n                  Go back to the\n                  {' '}\n                  <code>\n                    Code\n                  </code>\n                  {' '}\n                  tab and navigate to the\n                  {' '}\n                  <code>\n                    src\n                  </code>\n                  {' '}\n                  directory. Click on the\n                  {' '}\n                  <code>\n                    config.json\n                  </code>\n                  {' '}\n                  file.\n\n                  <a href={configuration} target=\"_blank\" rel=\"noopener noreferrer\">\n                    <img\n                      className=\"img-fluid img-thumbnail\"\n                      src={configuration}\n                      alt=\"GitHub repository with arrow pointing to config.json file\"\n                    />\n                  </a>\n\n                </li>\n                <li>\n                  Edit the file and update the following data fields:\n                  <ul>\n                    <li>\n                      <code>title</code>\n                      : set this to whatever you want the title of your\n                      site to be.\n                    </li>\n                    <li>\n                      <code>subtitle</code>\n                      : set this to a subtitle you want to show for\n                      your site. It can be the empty string (\n                      <code>\n                        &quot;&quot;\n                      </code>\n                      ).\n                    </li>\n                    <li>\n                      <code>doi</code>\n                      : set this to the empty string for now (\n                      <code>\n                        &quot;&quot;\n                      </code>\n                      ). (More\n                      information on adding a DOI is provided in the\n                      {' '}\n                      <Link to=\"/instructions/doi\">DOI instructions</Link>\n                      .)\n                    </li>\n                    <li>\n                      <code>copyright</code>\n                      : set this to whatever copyright statement\n                      you want for your data files. We recommend using a\n                      {' '}\n                      <a href=\"https://creativecommons.org\" target=\"_blank\" rel=\"noopener noreferrer\">\n                        Creative Commons license\n                      </a>\n                      .\n                    </li>\n                    <li>\n                      <code>report</code>\n                      : if you want people to be able to report any\n                      problems they find in your data, you can set this to the\n                      issues url for your repository by replacing\n                      {' '}\n                      <code>perseids-publications</code>\n                      {' '}\n                      with your GitHub account\n                      name. Otherwise set it to the empty string (\n                      <code>\n                        &quot;&quot;\n                      </code>\n                      ).\n                    </li>\n                    <li>\n                      <code>github</code>\n                      : replace\n                      {' '}\n                      <code>perseids-publications</code>\n                      {' '}\n                      with your GitHub account name.\n                    </li>\n                    <li>\n                      <code>twitter</code>\n                      : replace this with your own Twitter handle\n                      url or else the empty string (\n                      <code>\n                        &quot;&quot;\n                      </code>\n                      ).\n                    </li>\n                  </ul>\n                  <a href={configEdit} target=\"_blank\" rel=\"noopener noreferrer\">\n                    <img\n                      className=\"img-fluid img-thumbnail\"\n                      src={configEdit}\n                      alt=\"GitHub visual editor editing package.json\"\n                    />\n                  </a>\n                </li>\n                <li>\n                  Scroll to the bottom of the page to\n                  {' '}\n                  <code>Commit changes</code>\n                  {' '}\n                  and enter a message to describe your change to this file.\n                  (e.g. something like\n\n                  {' '}\n                  <code>\n                    Updated site config\n                  </code>\n                  .)\n                </li>\n                <li>\n                  Make sure the option\n                  {' '}\n                  <code>\n                    Commit directly to the master branch\n                  </code>\n                  {' '}\n                  is selected.\n\n                  <a href={commit} target=\"_blank\" rel=\"noopener noreferrer\">\n                    <img\n                      className=\"img-fluid img-thumbnail\"\n                      src={commit}\n                      alt=\"GitHub page for creating a manual commit with arrow pointing to commit option\"\n                    />\n                  </a>\n\n                </li>\n                <li>\n                  Go back to the\n                  {' '}\n                  <code>Actions</code>\n                  {' '}\n                  tab.\n                </li>\n                <li>\n                  You should see that your build workflow is in progress.\n\n                  <a href={progress} target=\"_blank\" rel=\"noopener noreferrer\">\n                    <img\n                      className=\"img-fluid img-thumbnail\"\n                      src={progress}\n                      alt=\"GitHub build workflow in progress\"\n                    />\n                  </a>\n                </li>\n\n                <li>\n                  And finally that it succeeds.\n\n                  <a href={success} target=\"_blank\" rel=\"noopener noreferrer\">\n                    <img\n                      className=\"img-fluid img-thumbnail\"\n                      src={success}\n                      alt=\"GitHub build workflow success\"\n                    />\n                  </a>\n\n                </li>\n                <li>\n                  At this point, your GitHub web page should be published and updated at\n                  {' '}\n                  <code>\n                    https://(youraccountname).github.io\n                  </code>\n                  .\n\n                  <a href={site} target=\"_blank\" rel=\"noopener noreferrer\">\n                    <img\n                      className=\"img-fluid img-thumbnail\"\n                      src={site}\n                      alt=\"published site based off of the Treebank Template\"\n                    />\n                  </a>\n\n                  So far it is published only with the default treebank files that come with the\n                  template. The next steps show you had to add a new file.\n                </li>\n              </ol>\n            </li>\n            <li>\n              <strong>Update the metadata.</strong>\n              <ol>\n                <li>\n                  Go back to the\n                  {' '}\n                  <code>\n                    Code\n                  </code>\n                  {' '}\n                  tab and click on the\n                  {' '}\n                  <code>\n                    .env\n                  </code>\n                  {' '}\n                  file.\n                </li>\n                <li>\n                  Click the\n                  {' '}\n                  <code>\n                    edit\n                  </code>\n                  {' '}\n                  icon.\n\n                  <a href={env} target=\"_blank\" rel=\"noopener noreferrer\">\n                    <img\n                      className=\"img-fluid img-thumbnail\"\n                      src={env}\n                      alt=\".env file in the GitHub visual editor\"\n                    />\n                  </a>\n                </li>\n                <li>\n                  Replace\n                  {' '}\n                  <code>\n                    perseids-publications.github.io\n                  </code>\n                  {' '}\n                  with, e.g.,\n                  {' '}\n                  <code>\n                    yourgithubaccount.github.io\n                  </code>\n                  {' '}\n                  after\n                  {' '}\n                  <code>\n                    REACT_APP_IMAGE_URL\n                  </code>\n                  {' '}\n                  and\n                  {' '}\n                  <code>\n                    REACT_APP_URL\n                  </code>\n                  .\n                  That is, if your GitHub user name is &quot;janedoe&quot; you would change\n                  {' '}\n                  <code>\n                    https://perseids-publications.github.io/treebank-template/\n                  </code>\n                  {' '}\n                  to\n                  {' '}\n                  <code>\n                    https://janedoe.github.io/treebank-template/\n                  </code>\n                  .\n                </li>\n                <li>\n                  Replace the other pieces of metadata with appropriate values:\n                  <ul>\n                    <li>\n                      <code>REACT_APP_SITE_NAME</code>\n                      : the larger site that this page is a part of. You can keep it as\n                      The Perseids Project or change it to the name of your project.\n                    </li>\n                    <li>\n                      <code>REACT_APP_TITLE</code>\n                      : change this to the title of your site\n                      (it is a good idea to make this the same as the title in\n                      {' '}\n                      <code>config.json</code>\n                      ).\n                    </li>\n                    <li>\n                      <code>REACT_APP_DESCRIPTION</code>\n                      : set this to a one or two sentence description of your project.\n                    </li>\n                  </ul>\n                </li>\n                <li>\n                  Scroll to the bottom of the page to\n                  {' '}\n                  <code>\n                    Commit changes\n                  </code>\n                  {' '}\n                  and enter a message to describe your\n                  change to this file (e.g. something like &quot;Updated metadata&quot;).\n                </li>\n                <li>\n                  Click\n                  {' '}\n                  <code>\n                    Commit changes\n                  </code>\n                  .\n                </li>\n              </ol>\n            </li>\n            <li>\n              <strong>Add a new file to your repository.</strong>\n              <ol>\n                <li>\n                  Return to the\n                  {' '}\n                  <code>Code</code>\n                  {' '}\n                  tab of the repository in GitHub and navigate to the\n                  {' '}\n                  <code>public/xml</code>\n                  {' '}\n                  directory.\n                </li>\n                <li>\n                  Click the\n                  {' '}\n                  <code>Upload</code>\n                  {' '}\n                  button.\n                  <a href={upload} target=\"_blank\" rel=\"noopener noreferrer\">\n                    <img\n                      className=\"img-fluid img-thumbnail\"\n                      src={upload}\n                      alt=\"arrow pointing to upload files button on GitHub\"\n                    />\n                  </a>\n                </li>\n                <li>Upload your file.</li>\n                <li>\n                  Navigate to the\n                  {' '}\n                  <code>src</code>\n                  {' '}\n                  directory of your repository.\n                </li>\n                <li>\n                  Edit the\n                  {' '}\n                  <code>config.json</code>\n                  {' '}\n                  file again.\n                </li>\n                <li>\n                  You need to add a new entry for the file you just added to the the\n                  {' '}\n                  <code>publications</code>\n                  {' '}\n                  section of the file. For each file added you need to define\n                  the following fields:\n                  <ul>\n                    <li>\n                      <code>path</code>\n                      : the virtual path for the files associated with\n                      the treebank publication - this can be anything\n                      you want, but avoid spaces and special characters.\n                    </li>\n                    <li>\n                      <code>author</code>\n                      : this should be set to be the author of the\n                      text that is the subject of the treebank publication.\n                    </li>\n                    <li>\n                      <code>work</code>\n                      : this should identify the text that is the subject\n                      of the treebank publication.\n                    </li>\n                    <li>\n                      <code>editors</code>\n                      : here you can list anybody who contributed to\n                      the treebank publication.\n                    </li>\n                    <li>\n                      <code>sections</code>\n                      : each treebank publication can be composed of\n                      one or more files (e.g. a very large text might be broken into\n                      chapters). In our example so far, we just have a publication\n                      made up of a single file. For each file added to the parent\n                      publication, we need a separate entry made up of the following fields:\n                      <ul>\n                        <li>\n                          <code>locus</code>\n                          : this is the text that will be shown as the link to the file\n                          on the site. Normally this is set to the range of sentences in the tree\n                          but it can be any text that makes sense for your data.\n                        </li>\n                        <li>\n                          <code>path</code>\n                          : the virtual path for the file. It can be anything you\n                          choose. A normal practice is to use the filename without the\n                          {' '}\n                          <code>\n                            .xml\n                          </code>\n                          {' '}\n                          extension.\n                          Avoid spaces and special characters.\n                        </li>\n                        <li>\n                          <code>xml</code>\n                          : this is the actual path to the file under the\n                          {' '}\n                          <code>public/xml</code>\n                          {' '}\n                          directory (excluding the\n                          {' '}\n                          <code>public/xml/</code>\n                          {' '}\n                          part of the path).\n                        </li>\n                        <li>\n                          <code>chunks</code>\n                          : this contains two sub fields.\n                          <ul>\n                            <li>\n                              <code>start</code>\n                              : the starting sentence number in your file.\n                            </li>\n                            <li>\n                              <code>end</code>\n                              : the ending sentence number in your file.\n                            </li>\n                          </ul>\n                        </li>\n                      </ul>\n\n                      The following fields are optional and can be used for\n                      more advanced configuration:\n\n                      <ul>\n                        <li>\n                          <code>link</code>\n                          : link to an external site.\n                        </li>\n                        <li>\n                          <code>license</code>\n                          : description of the license for this treebank.\n                        </li>\n                        <li>\n                          <code>notes</code>\n                          : any additional information.\n                        </li>\n                      </ul>\n                    </li>\n                  </ul>\n\n                  <a href={myTreesConfig} target=\"_blank\" rel=\"noopener noreferrer\">\n                    <img\n                      className=\"img-fluid img-thumbnail\"\n                      src={myTreesConfig}\n                      alt=\"GitHub visual editor editing src/config.json\"\n                    />\n                  </a>\n\n                  <br />\n                  The following fields are optional and can be used for\n                  more advanced configuration:\n\n                  <ul>\n                    <li>\n                      <code>hidden</code>\n                      : if set to\n                      {' '}\n                      <code>true</code>\n                      , the publication will not\n                      be displayed.\n                    </li>\n                    <li>\n                      <code>collapsed</code>\n                      : if set to\n                      {' '}\n                      <code>true</code>\n                      , the publication will link\n                      to a separate page containing a list of sections instead\n                      of listing each section on the home page.\n                    </li>\n                  </ul>\n\n                </li>\n                <li>\n                  It&apos;s a good idea to make sure the file parses as valid JSON prior\n                  to saving it. The JSON validator at\n                  {' '}\n                  <a href=\"https://jsonlint.com/\" target=\"_blank\" rel=\"noopener noreferrer\">https://jsonlint.com</a>\n                  {' '}\n                  is a good resource to use for that.\n                </li>\n                <li>Save and commit your changes to the master branch.</li>\n                <li>\n                  After the build succeeds, you should now see your new tree publication added to\n                  the site.\n                  <a href={myTreesSite} target=\"_blank\" rel=\"noopener noreferrer\">\n                    <img\n                      className=\"img-fluid img-thumbnail\"\n                      src={myTreesSite}\n                      alt=\"published site with an arrow pointing to newly added section\"\n                    />\n                  </a>\n                </li>\n                <li>\n                  Once you have added your own data files to the repository, you may wish to\n                  register a\n                  {' '}\n                  <a href=\"https://doi.org\" target=\"_blank\" rel=\"noopener noreferrer\">DOI</a>\n                  {' '}\n                  as a\n                  a persistent identifier for your data so that it can be easily\n                  cited. This DOI can then be listed on the home page of the repository.\n                  See the\n                  {' '}\n                  <Link to=\"/instructions/doi\">DOI</Link>\n                  {' '}\n                  instructions for details.\n                </li>\n              </ol>\n            </li>\n          </ol>\n          <p>\n            You now have the basics of how to get started with creating a GitHub based publication\n            of your treebank data using the Perseids Publications treebank template. From here you\n            can proceed to remove the sample data from the publication by removing the files from\n            the\n            {' '}\n            <code>public/xml</code>\n            {' '}\n            directory and removing the\n            corresponding entries in the\n            {' '}\n            <code>src/config.json</code>\n            {' '}\n            file (doing so requires a local clone of your\n            GitHub respository). You can also add additional files and publications,\n            and\n            {' '}\n            <a href={`${process.env.PUBLIC_URL}/examples/alpheios-integration`} target=\"_blank\" rel=\"noopener noreferrer\">\n              integrate it with Alpheios\n            </a>\n            .\n          </p>\n          <p>\n            The Perseids Treebank Template code is regularly updated with new features.\n            We have created a workflow that makes it easy to pull the updates into your repository.\n            See the\n            {' '}\n            <Link to=\"/instructions/updating\">updating</Link>\n            {' '}\n            instructions for details.\n          </p>\n          For additional information see also the repository&apos;s\n          {' '}\n          <code>README.md</code>\n          {' '}\n          file and the\n          {' '}\n          <code>docs/Config.md</code>\n          {' '}\n          file.\n        </div>\n      </div>\n    </div>\n  </>\n);\n\nGettingStarted.propTypes = {\n  config: configType.isRequired,\n};\n\nexport default GettingStarted;\n","import GettingStarted from './GettingStarted';\n\nexport default GettingStarted;\n","import React from 'react';\n\nimport styles from '../Instructions.module.css';\n\nimport doi from './doi.png';\nimport zenodoHome from './zenodo-home.png';\nimport zenodoLogin from './zenodo-login.png';\nimport zenodoAuthorize from './zenodo-authorize.png';\nimport zenodoConnect from './zenodo-connect.png';\nimport zenodoDropdown from './zenodo-dropdown.png';\nimport zenodoSwitch from './zenodo-switch.png';\nimport zenodoSelectUpload from './zenodo-select-upload.png';\nimport zenodoUploadList from './zenodo-upload-list.png';\nimport zenodoUpload from './zenodo-upload.png';\nimport githubSelectActions from './github-select-actions.png';\nimport githubSelectRelease from './github-select-release.png';\nimport githubRunWorkflow from './github-run-workflow.png';\nimport githubWorkflowInputs from './github-workflow-inputs.png';\nimport githubEditFile from './github-edit-file.png';\nimport githubVisualEditor from './github-visual-editor.png';\n\nimport { configType } from '../../../lib/types';\n\nimport InstructionsHeader from '../InstructionsHeader';\n\nconst Doi = ({ config }) => (\n  <>\n    <InstructionsHeader config={config} title=\"Digital Object Identifier (DOI)\" />\n    <div className={`container pt-3 pb-4 ${styles.instructions}`}>\n      <div className=\"row\">\n        <div className=\"col\">\n          <h2>Registering and Referencing your data via DOI</h2>\n          <p>\n            If you have a DOI for your data, you can reference it easily in the treebank\n            template repository&apos;s metadata. This will add a DOI link to the bottom of\n            the repository&apos;s home page.\n          </p>\n\n          <a\n            href={doi}\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            <img\n              className=\"img-fluid img-thumbnail mt-0\"\n              src={doi}\n              alt=\"footer of Treebank Template showing DOI\"\n            />\n          </a>\n\n          <p>\n            There are many ways to register DOIs. Your institution may provide this service\n            or you can use an open access repository such as\n            {' '}\n            <a\n              href=\"https://zenodo.org\"\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n            >\n              Zenodo\n            </a>\n            .\n          </p>\n          <p>\n            We describe below the process for using Zenodo. The instructions should be\n            similar for other services.\n          </p>\n          <ol>\n            <li>\n              <b>Connect Zenodo to GitHub</b>\n              <ol>\n                <li>\n                  If you do not have a Zenodo account:\n                  <ol>\n                    <li>\n                      Visit\n                      {' '}\n                      <a\n                        href=\"https://zenodo.org/\"\n                        target=\"_blank\"\n                        rel=\"noopener noreferrer\"\n                      >\n                        zenodo.org\n                      </a>\n                      .\n                    </li>\n                    <li>\n                      Click on the\n                      {' '}\n                      <code>Log in</code>\n                      {' '}\n                      button.\n\n                      <a href={zenodoHome} target=\"_blank\" rel=\"noopener noreferrer\">\n                        <img\n                          className=\"img-fluid img-thumbnail\"\n                          src={zenodoHome}\n                          alt=\"Zenodo home page\"\n                        />\n                      </a>\n                    </li>\n                    <li>\n                      Click on\n                      {' '}\n                      <code>Log in with GitHub</code>\n                      .\n\n                      <a href={zenodoLogin} target=\"_blank\" rel=\"noopener noreferrer\">\n                        <img\n                          className=\"img-fluid img-thumbnail\"\n                          src={zenodoLogin}\n                          alt=\"Zenodo login page\"\n                        />\n                      </a>\n                    </li>\n                    <li>\n                      Click on the\n                      {' '}\n                      <code>Authorize zenodo</code>\n                      {' '}\n                      button.\n\n                      <a href={zenodoAuthorize} target=\"_blank\" rel=\"noopener noreferrer\">\n                        <img\n                          className=\"img-fluid img-thumbnail\"\n                          src={zenodoAuthorize}\n                          alt=\"Zenodo GitHub authorization page\"\n                        />\n                      </a>\n                    </li>\n                  </ol>\n                </li>\n                <li>\n                  If you already have a Zenodo account but it is not connected to your\n                  GitHub account:\n                  <ol>\n                    <li>\n                      Log in to Zenodo.\n                    </li>\n                    <li>\n                      Click the drop-down menu with your email address.\n                    </li>\n                    <li>\n                      Select\n                      {' '}\n                      <code>GitHub</code>\n                      .\n\n                      <a href={zenodoDropdown} target=\"_blank\" rel=\"noopener noreferrer\">\n                        <img\n                          className=\"img-fluid img-thumbnail\"\n                          src={zenodoDropdown}\n                          alt=\"Zenodo home page with drop-down menu expanded\"\n                        />\n                      </a>\n                    </li>\n                    <li>\n                      Click on\n                      {' '}\n                      <code>Connect</code>\n                      .\n\n                      <a href={zenodoConnect} target=\"_blank\" rel=\"noopener noreferrer\">\n                        <img\n                          className=\"img-fluid img-thumbnail\"\n                          src={zenodoConnect}\n                          alt=\"Zenodo settings page GitHub tab when GitHub integration is not set up\"\n                        />\n                      </a>\n                    </li>\n                    <li>\n                      Click on the\n                      {' '}\n                      <code>Authorize zenodo</code>\n                      {' '}\n                      button.\n\n                      <a href={zenodoAuthorize} target=\"_blank\" rel=\"noopener noreferrer\">\n                        <img\n                          className=\"img-fluid img-thumbnail\"\n                          src={zenodoAuthorize}\n                          alt=\"Zenodo GitHub authorization page\"\n                        />\n                      </a>\n                    </li>\n                  </ol>\n                </li>\n              </ol>\n            </li>\n            <li>\n              <b>Enable Zenodo for repository</b>\n              <ol>\n                <li>\n                  In Zenodo, click on the drop-down menu with your email address and select\n                  {' '}\n                  <code>GitHub</code>\n                  .\n\n                  <a href={zenodoDropdown} target=\"_blank\" rel=\"noopener noreferrer\">\n                    <img\n                      className=\"img-fluid img-thumbnail\"\n                      src={zenodoDropdown}\n                      alt=\"Zenodo home page with drop-down menu expanded\"\n                    />\n                  </a>\n                </li>\n                <li>\n                  Flip the switch for the repository you want to create a DOI for.\n\n                  <a href={zenodoSwitch} target=\"_blank\" rel=\"noopener noreferrer\">\n                    <img\n                      className=\"img-fluid img-thumbnail\"\n                      src={zenodoSwitch}\n                      alt=\"Zenodo settings page GitHub tab when GitHub integration is set up\"\n                    />\n                  </a>\n                </li>\n              </ol>\n            </li>\n            <li>\n              <b>Create a release</b>\n              <ol>\n                <li>\n                  On the GitHub page for the repository, click on the\n                  {' '}\n                  <code>Actions</code>\n                  {' '}\n                  tab.\n\n                  <a href={githubSelectActions} target=\"_blank\" rel=\"noopener noreferrer\">\n                    <img\n                      className=\"img-fluid img-thumbnail\"\n                      src={githubSelectActions}\n                      alt=\"GitHub repository with arrow pointing to actions tab\"\n                    />\n                  </a>\n                </li>\n                <li>\n                  Click on the\n                  {' '}\n                  <code>release</code>\n                  {' '}\n                  workflow from the workflow list.\n                  (Every time this workflow is run, it archives the code in the GitHub\n                  repository using Zenodo.)\n\n                  <a href={githubSelectRelease} target=\"_blank\" rel=\"noopener noreferrer\">\n                    <img\n                      className=\"img-fluid img-thumbnail\"\n                      src={githubSelectRelease}\n                      alt=\"GitHub actions page\"\n                    />\n                  </a>\n                </li>\n                <li>\n                  Click on the\n                  {' '}\n                  <code>Run workflow</code>\n                  {' '}\n                  drop-down menu.\n\n                  <a href={githubRunWorkflow} target=\"_blank\" rel=\"noopener noreferrer\">\n                    <img\n                      className=\"img-fluid img-thumbnail\"\n                      src={githubRunWorkflow}\n                      alt=\"release workflow page with Run workflow drop-down menu selected\"\n                    />\n                  </a>\n                </li>\n                <li>\n                  Fill in the version input.\n                  The first time that you run this action, you should use\n                  {' '}\n                  <code>v1.0.0</code>\n                  . On subsequent runs, the version you supply should conform to\n                  {' '}\n                  <a\n                    href=\"https://semver.org/spec/v2.0.0.html\"\n                    target=\"_blank\"\n                    rel=\"noopener noreferrer\"\n                  >\n                    SemVer\n                  </a>\n                  {' '}\n                  as much as possible.\n                  This means:\n                  <ul>\n                    <li>\n                      If you are fixing a typo or making a\n                      similar small change, you only increment the last number (e.g.\n                      {' '}\n                      <code>v1.0.0</code>\n                      {' '}\n                      to\n                      {' '}\n                      <code>v1.0.1</code>\n                      ).\n                    </li>\n                    <li>\n                      If new treebanks are added, the middle number should be incremented (e.g.\n                      {' '}\n                      <code>v2.2.5</code>\n                      {' '}\n                      to\n                      {' '}\n                      <code>v2.3.0</code>\n                      ).\n                    </li>\n                    <li>\n                      The first number should be incremented if existing treebanks are changed (e.g.\n                      {' '}\n                      <code>v3.1.1</code>\n                      {' '}\n                      to\n                      {' '}\n                      <code>v4.0.0</code>\n                      ).\n                    </li>\n                    <li>\n                      See the list of releases for\n                      {' '}\n                      <a\n                        href=\"https://github.com/perseids-publications/treebank-template/releases\"\n                        target=\"_blank\"\n                        rel=\"noopener noreferrer\"\n                      >\n                        perseids-publications/treebank-template\n                      </a>\n                      {' '}\n                      for one example of how SemVer is used in practice.\n                    </li>\n                  </ul>\n                </li>\n                <li>\n                  Fill in the description input with a one or two sentence description.\n                </li>\n                <li>\n                  Click on the\n                  {' '}\n                  <code>Run workflow</code>\n                  {' '}\n                  button.\n                  The release workflow will now run.\n                  When it is complete, the code will be published and archived with Zenodo.\n\n                  <a href={githubWorkflowInputs} target=\"_blank\" rel=\"noopener noreferrer\">\n                    <img\n                      className=\"img-fluid img-thumbnail\"\n                      src={githubWorkflowInputs}\n                      alt=\"release workflow page with Run workflow drop-down menu selected\"\n                    />\n                  </a>\n                </li>\n              </ol>\n            </li>\n            <li>\n              <b>Add the DOI to your treebank-template metadata</b>\n              <ol>\n                <li>\n                  Visit Zenodo and click on\n                  {' '}\n                  <code>Upload</code>\n                  . You should now see your repository.\n\n                  <a href={zenodoSelectUpload} target=\"_blank\" rel=\"noopener noreferrer\">\n                    <img\n                      className=\"img-fluid img-thumbnail\"\n                      src={zenodoSelectUpload}\n                      alt=\"Zenodo home page with arrow pointing to Upload button\"\n                    />\n                  </a>\n                </li>\n                <li>\n                  Click on the repository in Zenodo.\n\n                  <a href={zenodoUploadList} target=\"_blank\" rel=\"noopener noreferrer\">\n                    <img\n                      className=\"img-fluid img-thumbnail\"\n                      src={zenodoUploadList}\n                      alt=\"Zenodo list of uploads\"\n                    />\n                  </a>\n                </li>\n                <li>\n                  Copy the DOI for\n                  {' '}\n                  <b>\n                    all versions\n                  </b>\n                  .\n                  (Note that there are multiple DOIs because Zenodo creates a DOI for each release.\n                  You specifically want to copy the one for all versions.)\n\n                  <a href={zenodoUpload} target=\"_blank\" rel=\"noopener noreferrer\">\n                    <img\n                      className=\"img-fluid img-thumbnail\"\n                      src={zenodoUpload}\n                      alt=\"Zenodo upload with arrow pointing to DOI for all versions section\"\n                    />\n                  </a>\n                </li>\n                <li>\n                  Return to your GitHub repository.\n                </li>\n                <li>\n                  Navigate to the\n                  {' '}\n                  <code>src</code>\n                  {' '}\n                  directory of your repository.\n                </li>\n                <li>\n                  Click on the\n                  {' '}\n                  <code>config.json</code>\n                  {' '}\n                  file.\n                </li>\n                <li>\n                  Click on the pencil icon to edit\n                  {' '}\n                  <code>config.json</code>\n                  .\n\n                  <a href={githubEditFile} target=\"_blank\" rel=\"noopener noreferrer\">\n                    <img\n                      className=\"img-fluid img-thumbnail\"\n                      src={githubEditFile}\n                      alt=\"File open in GitHub\"\n                    />\n                  </a>\n                </li>\n                <li>\n                  Replace the value after the\n                  {' '}\n                  <code>doi</code>\n                  {' '}\n                  field with your newly reserved DOI.\n\n                  <a href={githubVisualEditor} target=\"_blank\" rel=\"noopener noreferrer\">\n                    <img\n                      className=\"img-fluid img-thumbnail\"\n                      src={githubVisualEditor}\n                      alt=\"GitHub visual editor editing config.json\"\n                    />\n                  </a>\n                </li>\n                <li>\n                  Commit the change to the master branch.\n                </li>\n              </ol>\n            </li>\n            <p>\n              At this point your treebank-template home page should have the DOI link\n              at the bottom and it should link directly to your data in Zenodo.\n            </p>\n          </ol>\n        </div>\n      </div>\n    </div>\n  </>\n);\n\nDoi.propTypes = {\n  config: configType.isRequired,\n};\n\nexport default Doi;\n","import Doi from './Doi';\n\nexport default Doi;\n","import React from 'react';\n\nimport styles from '../Instructions.module.css';\n\nimport actions from './actions.png';\nimport update from './update.png';\nimport runWorkflow from './run-workflow.png';\n\nimport { configType } from '../../../lib/types';\n\nimport InstructionsHeader from '../InstructionsHeader';\n\nconst Updating = ({ config }) => (\n  <>\n    <InstructionsHeader config={config} title=\"Updating\" />\n    <div className={`container pt-3 pb-4 ${styles.instructions}`}>\n      <div className=\"row\">\n        <div className=\"col\">\n          <h2>Updating the Treebank Template code</h2>\n          <p>\n            In order to use new features introduced in versions of\n            {' '}\n            <a\n              href=\"https://github.com/perseids-publications/treebank-template\"\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n            >\n              perseids-publications/treebank-template\n            </a>\n            {' '}\n            published after your own fork was created,\n            you will need to update the underlying Treebank Template code.\n          </p>\n\n          <p>\n            This can be done through GitHub&apos;s interface by following the steps below:\n          </p>\n\n          <ol>\n            <li>\n              Click on the\n              {' '}\n              <code>Actions</code>\n              {' '}\n              tab.\n\n              <a\n                href={actions}\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n              >\n                <img\n                  className=\"img-fluid img-thumbnail\"\n                  src={actions}\n                  alt=\"GitHub repository with arrow pointing to actions tab\"\n                />\n              </a>\n            </li>\n            <li>\n              Click on the\n              {' '}\n              <code>update</code>\n              {' '}\n              workflow from the workflow list.\n\n              <a\n                href={update}\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n              >\n                <img\n                  className=\"img-fluid img-thumbnail\"\n                  src={update}\n                  alt=\"GitHub repository action tab with arrow pointing to update action\"\n                />\n              </a>\n            </li>\n            <li>\n              Click on the\n              {' '}\n              <code>Run workflow</code>\n              {' '}\n              drop-down list and then click on the green\n              {' '}\n              <code>Run workflow</code>\n              {' '}\n              button.\n\n              <a\n                href={runWorkflow}\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n              >\n                <img\n                  className=\"img-fluid img-thumbnail\"\n                  src={runWorkflow}\n                  alt=\"Update workflow page with arrow pointing to the run workflow button\"\n                />\n              </a>\n              {' '}\n\n              The update workflow will now run.\n              When it is complete, the code will be up to date with\n              {' '}\n\n              <a\n                href=\"https://github.com/perseids-publications/treebank-template\"\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n              >\n                perseids-publications/treebank-template\n              </a>\n              .\n            </li>\n          </ol>\n        </div>\n      </div>\n    </div>\n  </>\n);\n\nUpdating.propTypes = {\n  config: configType.isRequired,\n};\n\nexport default Updating;\n","import Updating from './Updating';\n\nexport default Updating;\n","import React from 'react';\n\nimport { configType } from '../../lib/types';\n\nimport Header from '../Header';\n\nconst NotFound = ({ config: { logo, link } }) => (\n  <>\n    <Header logo={logo} link={link}>\n      <span>\n        Not Found\n      </span>\n      <ul className=\"navbar-nav ml-auto\">\n        <li className=\"nav-item\">\n          <a className=\"nav-link\" href={`${process.env.PUBLIC_URL}/`}>\n            Home\n          </a>\n        </li>\n      </ul>\n    </Header>\n    <div className=\"container pt-5\">\n      <div className=\"row col-12 pt-5 pb-3\">\n        <div className=\"col-12 text-center\">\n          <h1>Error 404</h1>\n        </div>\n      </div>\n      <div className=\"row col-12 pb-3\">\n        <div className=\"col-12 text-center\">\n          <h2>Publication not found</h2>\n        </div>\n      </div>\n      <div className=\"row col-12 pb-3\">\n        <div className=\"col-12 text-center\">\n          <h2>\n            <a href={`${process.env.PUBLIC_URL}/`}>\n              Return to homepage\n            </a>\n          </h2>\n        </div>\n      </div>\n    </div>\n  </>\n);\n\nNotFound.propTypes = {\n  config: configType.isRequired,\n};\n\nexport default NotFound;\n","import NotFound from './NotFound';\n\nexport default NotFound;\n","import React from 'react';\nimport { Route, Switch } from 'react-router-dom';\n\nimport GettingStarted from './GettingStarted';\nimport Doi from './Doi';\nimport Updating from './Updating';\nimport NotFound from '../NotFound';\n\nimport { configType } from '../../lib/types';\n\nconst Instructions = ({ config }) => (\n  <>\n    <Switch>\n      <Route exact path=\"/instructions/getting-started\" component={() => <GettingStarted config={config} />} />\n      <Route exact path=\"/instructions/doi\" component={() => <Doi config={config} />} />\n      <Route exact path=\"/instructions/updating\" component={() => <Updating config={config} />} />\n      <Route component={() => <NotFound config={config} />} />\n    </Switch>\n  </>\n);\n\nInstructions.propTypes = {\n  config: configType.isRequired,\n};\n\nexport default Instructions;\n","import Instructions from './Instructions';\n\nexport default Instructions;\n","const defaultConfig = {\n  main: {\n    debug: false,\n    showKeys: false,\n    chunkParam: 'chunk',\n    auxConfPath: `${process.env.PUBLIC_URL}/arethusa/configs`,\n    retrievers: {\n      TreebankRetriever: {\n        resource: 'Gardener',\n        docIdentifier: 'treebank',\n        preselector: 'w',\n      },\n    },\n    plugins: [\n      'text',\n      'morph',\n      'relation',\n      'depTree',\n      'search',\n    ],\n    layouts: [\n      {\n        name: 'widget',\n        template: 'js/templates/widget.html',\n      },\n    ],\n  },\n  notifier: {\n    disable: true,\n  },\n  navigator: {\n    chunkSize: 1,\n  },\n  navbar: false,\n  resources: {\n    Gardener: {\n      route: `${process.env.PUBLIC_URL}/xml/:doc`,\n      params: [\n        'doc',\n      ],\n    },\n    lexInvFusekiEndpoint: {\n      route: 'https://fuseki.perseids.org/fuseki/ds/query?format=json',\n    },\n    morphologyServiceLat: {\n      route: 'https://services.perseids.org/bsp/morphologyservice/analysis/word?lang=lat&engine=morpheuslat',\n    },\n    newMorphologyServiceLat: {\n      route: 'https://morph.perseids.org/analysis/word?lang=lat&engine=morpheuslat',\n    },\n    morphologyServiceGrc: {\n      route: 'https://services.perseids.org/bsp/morphologyservice/analysis/word?lang=grc&engine=morpheusgrc',\n    },\n    newMorphologyServiceGrc: {\n      route: 'https://morph.perseids.org/analysis/word?lang=grc&engine=morpheusgrc',\n    },\n    morphologyServicePer: {\n      route: 'https://localhost/extapi/morphologyservice/analysis/word?lang=per&engine=hazm',\n    },\n    citeMapper: {\n      route: 'https://services.perseids.org/cite_mapper/find_cite',\n    },\n    sgGrammar: {\n      route: 'https://services.perseids.org/sg/:doc.html',\n    },\n  },\n  plugins: {\n    text: {\n      main: true,\n      template: 'js/templates/text_with_context.html',\n    },\n    depTree: {\n      main: true,\n      contextMenu: false,\n      contextMenuTemplate: 'js/arethusa.dep_tree/templates/context_menu.html',\n      template: 'js/templates/dep_tree_no_selector.html',\n    },\n    morph: {\n      retrievers: {\n        BspMorphRetriever: {\n          resource: 'morphologyServiceLat',\n        },\n      },\n      template: 'js/templates/morph3.html',\n      contextMenu: true,\n      contextMenuTemplate: 'js/arethusa.morph/templates/context_menu.html',\n      lexicalInventory: {\n        retriever: {\n          LexicalInventoryRetriever: {\n            resource: 'lexInvFusekiEndpoint',\n          },\n        },\n      },\n      matchAll: true,\n      '@include': 'js/arethusa.morph/configs/morph/lat_attributes.json',\n      noRetrieval: 'online',\n    },\n    search: {\n      template: 'js/templates/search.html',\n      regex: true,\n    },\n    relation: {\n      advancedMode: true,\n      relations: {},\n    },\n  },\n  keyCapture: {\n    regex: {\n      greek: {\n        α: '[\\u03b1\\u1f01\\u1f05\\u1f03\\u1f07\\u1f00\\u1f04\\u1f02\\u1f06\\u03ac\\u1f70\\u1fb6\\u1f81\\u1f85\\u1f83\\u1f87\\u1f80\\u1f84\\u1f82\\u1f86\\u1fb4\\u1fb2\\u1fb7\\u1fb3]',\n        ε: '[\\u03b5\\u03ad\\u1f72\\u1f10\\u1f11\\u1f14\\u1f12\\u1f15\\u1f13]',\n        η: '[\\u03b7\\u1f21\\u1f25\\u1f23\\u1f27\\u1f20\\u1f24\\u1f22\\u1f26\\u03ae\\u1f74\\u1fc6\\u1f91\\u1f95\\u1f93\\u1f97\\u1f90\\u1f94\\u1f92\\u1f96\\u1fc4\\u1fc2\\u1fc7\\u1fc3]',\n        ι: '[\\u03b9\\u1f31\\u1f35\\u1f33\\u1f37\\u1f30\\u1f34\\u1f32\\u1f36\\u03af\\u1f76\\u1fd6]',\n        ο: '[\\u03bf\\u03cc\\u1f78\\u1f40\\u1f41\\u1f44\\u1f42\\u1f45\\u1f43]',\n        υ: '[\\u03c5\\u1f51\\u1f55\\u1f53\\u1f57\\u1f50\\u1f54\\u1f52\\u1f56\\u03cd\\u1f7a\\u1fe6]',\n        ω: '[\\u03c9\\u1f61\\u1f65\\u1f63\\u1f67\\u1f60\\u1f64\\u1f62\\u1f66\\u03ce\\u1f7c\\u1ff6\\u1fa1\\u1fa5\\u1fa3\\u1fa7\\u1fa0\\u1fa4\\u1fa2\\u1fa6\\u1ff4\\u1ff2\\u1ff7\\u1ff3]',\n      },\n    },\n    keys: {},\n  },\n};\n\nconst sidepanelConfig = JSON.parse(JSON.stringify(defaultConfig));\nsidepanelConfig.main.layouts = [\n  {\n    name: 'main_with_sidepanel',\n    template: 'js/templates/main_with_sidepanel.html',\n  },\n];\n\nexport { defaultConfig, sidepanelConfig };\n","import { defaultConfig, sidepanelConfig } from './ArethusaConfig';\n\nconst elementId = 'treebank_container';\nconst remoteUrl = `${process.env.PUBLIC_URL}/arethusa`;\n\nconst removeToastContainer = ($) => {\n  $('#toast-container').remove();\n};\n\nconst getConfig = (config) => {\n  if (config === 'sidepanel') {\n    return sidepanelConfig;\n  }\n\n  return defaultConfig;\n};\n\nconst wordsDiffer = (a, b) => {\n  const aList = (a || []).sort().join(',');\n  const bList = (b || []).sort().join(',');\n\n  return aList !== bList;\n};\n\nclass ArethusaWrapper {\n  constructor() {\n    this.render = this.render.bind(this);\n  }\n\n  render(doc, chunk, { config, w }) {\n    // eslint-disable-next-line no-undef\n    const { Arethusa, $ } = window;\n\n    if (this.widget) {\n      if (this.doc === doc && (this.chunk !== chunk || wordsDiffer(this.w, w))) {\n        this.gotoSentence(chunk, w);\n        removeToastContainer($);\n      }\n    } else {\n      this.widget = new Arethusa();\n\n      this.widget\n        .on(elementId)\n        .from(remoteUrl)\n        .with(getConfig(config))\n        .start({ doc, chunk, w });\n\n      this.api = this.widget.api();\n    }\n\n    this.doc = doc;\n    this.chunk = chunk;\n    this.w = w;\n  }\n\n  gotoSentence(chunk, words) {\n    return this.api.gotoSentence(chunk, words);\n  }\n\n  getSubdoc() {\n    return this.api.getSubdoc();\n  }\n\n  getMorph(sentenceId, wordId) {\n    return this.api.getMorph(sentenceId, wordId);\n  }\n\n  refreshView() {\n    return this.api.refreshView();\n  }\n\n  findWord(sentenceId, word, prefix, suffix) {\n    return this.api.findWord(sentenceId, word, prefix, suffix);\n  }\n}\n\nexport default ArethusaWrapper;\n","import ArethusaWrapper from './ArethusaWrapper';\n\nexport default ArethusaWrapper;\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { SettingsIcon } from '@primer/octicons-react';\nimport queryString from 'query-string';\n\nimport { chunksType, publicationMatchType, queryType } from '../../lib/types';\n\nimport styles from './ControlPanel.module.css';\n\nconst min = (a, b) => (a < b ? a : b);\nconst max = (a, b) => (a > b ? a : b);\n\nconst getFbcnlFromNumbers = (chunk, numbers) => {\n  const index = numbers.indexOf(chunk);\n\n  return [\n    numbers[0],\n    numbers[max(0, index - 1)],\n    chunk,\n    numbers[min(numbers.length - 1, index + 1)],\n    numbers[numbers.length - 1],\n  ];\n};\n\nclass ControlPanel extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      refIsOpen: false,\n      settingsIsOpen: false,\n    };\n\n    this.getLines = this.getLines.bind(this);\n    this.getFbcnl = this.getFbcnl.bind(this);\n    this.createLink = this.createLink.bind(this);\n    this.toggleRefOpen = this.toggleRefOpen.bind(this);\n    this.toggleSettingsOpen = this.toggleSettingsOpen.bind(this);\n    this.renderSettingsLinks = this.renderSettingsLinks.bind(this);\n    this.renderBack = this.renderBack.bind(this);\n    this.renderNext = this.renderNext.bind(this);\n  }\n\n  getLines() {\n    const { chunks: { start, end, numbers } } = this.props;\n\n    if (numbers) {\n      return numbers;\n    }\n\n    const lines = [];\n    for (let ii = start; ii <= end; ii += 1) {\n      lines.push(ii);\n    }\n\n    return lines;\n  }\n\n  getFbcnl() {\n    const { chunks: { start, end, numbers }, match } = this.props;\n    const { params: { chunk } } = match;\n    const index = Number(chunk);\n\n    if (numbers) {\n      return getFbcnlFromNumbers(chunk, numbers);\n    }\n\n    return [\n      start,\n      max(start, index - 1),\n      chunk,\n      min(end, index + 1),\n      end,\n    ];\n  }\n\n  createLink(to) {\n    const { linkQuery } = this.props;\n    const link = `./${to}`;\n\n    if (Object.entries(linkQuery).length > 0) {\n      const query = queryString.stringify(linkQuery);\n\n      return `${link}?${query}`;\n    }\n\n    return link;\n  }\n\n  toggleRefOpen() {\n    this.setState(({ refIsOpen }) => ({ refIsOpen: !refIsOpen }));\n  }\n\n  toggleSettingsOpen() {\n    this.setState(({ settingsIsOpen }) => ({ settingsIsOpen: !settingsIsOpen }));\n  }\n\n  renderSettingsLinks() {\n    const { fullQuery } = this.props;\n    const { config } = fullQuery;\n    const newConfig = config === 'sidepanel' ? 'default' : 'sidepanel';\n    const text = config === 'sidepanel' ? 'Hide morphology' : 'Show morphology';\n\n    return (\n      <a\n        href={`?${queryString.stringify({ ...fullQuery, config: newConfig })}`}\n        className=\"dropdown-item\"\n      >\n        {text}\n      </a>\n    );\n  }\n\n  renderBack(first, back, current) {\n    const visibility = current === String(first) ? ' invisible' : '';\n\n    return (\n      <>\n        <li className={`nav-item${visibility}`}>\n          <Link className={`nav-link text-light ${styles.link}`} to={this.createLink(first)}>\n            &laquo; First\n          </Link>\n        </li>\n        <li className={`nav-item${visibility}`}>\n          <Link className={`nav-link text-light ${styles.link}`} to={this.createLink(back)}>\n            &#8249; Back\n          </Link>\n        </li>\n      </>\n    );\n  }\n\n  renderNext(current, next, last) {\n    const visibility = current === String(last) ? ' invisible' : '';\n\n    return (\n      <>\n        <li className={`nav-item${visibility}`}>\n          <Link className={`nav-link text-light ${styles.link}`} to={this.createLink(next)}>\n            Next &#8250;\n          </Link>\n        </li>\n        <li className={`nav-item${visibility}`}>\n          <Link className={`nav-link text-light ${styles.link}`} to={this.createLink(last)}>\n            Last &raquo;\n          </Link>\n        </li>\n      </>\n    );\n  }\n\n  render() {\n    const { refIsOpen, settingsIsOpen } = this.state;\n    const [first, back, current, next, last] = this.getFbcnl();\n    const lines = this.getLines();\n\n    return (\n      <nav className=\"navbar navbar-expand navbar-dark bg-dark\">\n        <div className=\"collapse navbar-collapse\" id=\"controlPanel\">\n          <ul className={`navbar-nav mr-auto ${styles.dummyIcon}`} />\n          <ul className=\"navbar-nav mx-auto\">\n            {this.renderBack(first, back, current)}\n            <li className=\"nav-item dropdown\">\n              <button className={`btn btn-link nav-link text-light dropdown-toggle ${styles.dropdownButton}`} type=\"button\" aria-haspopup=\"true\" aria-expanded={refIsOpen} onClick={this.toggleRefOpen}>\n                {current}\n              </button>\n              <div className={`dropdown-menu ${styles.dropdownScroll} ${refIsOpen ? 'show' : ''}`}>\n                {\n                  lines.map((n) => (\n                    <Link className=\"dropdown-item\" key={n} to={this.createLink(n)} onClick={this.toggleRefOpen}>\n                      {n}\n                    </Link>\n                  ))\n                }\n              </div>\n            </li>\n            {this.renderNext(current, next, last)}\n          </ul>\n          <ul className=\"navbar-nav ml-auto\">\n            <li className=\"nav-item dropdown dropleft\">\n              <button className=\"btn btn-link nav-link text-light\" type=\"button\" aria-haspopup=\"true\" aria-expanded={settingsIsOpen} onClick={this.toggleSettingsOpen}>\n                <SettingsIcon />\n              </button>\n              <div className={`dropdown-menu ${styles.dropdownScroll} ${settingsIsOpen ? 'show' : ''}`}>\n                {this.renderSettingsLinks()}\n              </div>\n            </li>\n          </ul>\n        </div>\n      </nav>\n    );\n  }\n}\n\nControlPanel.propTypes = {\n  chunks: chunksType.isRequired,\n  match: publicationMatchType.isRequired,\n  fullQuery: queryType.isRequired,\n  linkQuery: queryType.isRequired,\n};\n\nexport default ControlPanel;\n","import ControlPanel from './ControlPanel';\n\nexport default ControlPanel;\n","import React, { Component } from 'react';\n\nconst remoteUrl = `${process.env.PUBLIC_URL}/arethusa`;\n\nconst styleSheets = [\n  `${remoteUrl}/css/arethusa.min.css`,\n  `${remoteUrl}/css/colorpicker.css`,\n  `${remoteUrl}/css/font-awesome.min.css`,\n  `${remoteUrl}/css/foundation-icons.css`,\n  `${remoteUrl}/css/widget.css`,\n];\n\nclass TreebankStyles extends Component {\n  componentDidMount() {\n  }\n\n  render() {\n    return (\n      <>\n        {styleSheets.map((st) => <link key={st} rel=\"stylesheet\" type=\"text/css\" href={st} />)}\n      </>\n    );\n  }\n}\n\nexport default TreebankStyles;\n","import TreebankStyles from './TreebankStyles';\n\nexport default TreebankStyles;\n","import queryString from 'query-string';\n\nconst params = [\n  { name: 'w', type: 'array' },\n  { name: 'config', type: 'string', link: true },\n];\n\nconst convertToType = (value, type) => {\n  if (type === 'array' && !Array.isArray(value)) {\n    return [value];\n  }\n\n  return value;\n};\n\nexport const parse = (search) => {\n  const parsed = queryString.parse(search, { arrayFormat: 'comma' });\n  const result = {};\n\n  params.forEach(({ name, type }) => {\n    if (Object.prototype.hasOwnProperty.call(parsed, name)) {\n      result[name] = convertToType(parsed[name], type);\n    }\n  });\n\n  return result;\n};\n\nexport const linkParams = (search) => {\n  const additionalArgs = parse(search);\n  const result = {};\n\n  params.forEach(({ name, type, link }) => {\n    if (link && Object.prototype.hasOwnProperty.call(additionalArgs, name)) {\n      result[name] = convertToType(additionalArgs[name], type);\n    }\n  });\n\n  return result;\n};\n\nexport const buildQueryString = (queryParams) => (\n  queryString.stringify(queryParams, { arrayFormat: 'comma' })\n);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { chunksType, publicationMatchType, locationType } from '../../lib/types';\n\nimport styles from './Treebank.module.css';\n\nimport ArethusaWrapper from '../ArethusaWrapper';\nimport ControlPanel from '../ControlPanel';\nimport TreebankStyles from '../TreebankStyles';\n\nimport { parse, linkParams } from '../../lib/params';\n\nclass Treebank extends Component {\n  constructor(props) {\n    super(props);\n\n    this.additionalArgs = this.additionalArgs.bind(this);\n    this.linkQuery = this.linkQuery.bind(this);\n    this.renderArethusa = this.renderArethusa.bind(this);\n  }\n\n  componentDidMount() {\n    this.renderArethusa();\n  }\n\n  componentDidUpdate() {\n    this.renderArethusa();\n  }\n\n  additionalArgs() {\n    const { location: { search } } = this.props;\n\n    return parse(search);\n  }\n\n  linkQuery() {\n    const { location: { search } } = this.props;\n\n    return linkParams(search);\n  }\n\n  renderArethusa() {\n    const {\n      xml,\n      match: { params: { chunk } },\n      arethusa: { render },\n    } = this.props;\n    const additionalArgs = this.additionalArgs();\n\n    render(xml, chunk, additionalArgs);\n  }\n\n  render() {\n    const { chunks, match } = this.props;\n    const linkQuery = this.linkQuery();\n    const fullQuery = this.additionalArgs();\n\n    return (\n      <>\n        <ControlPanel\n          match={match}\n          chunks={chunks}\n          fullQuery={fullQuery}\n          linkQuery={linkQuery}\n        />\n        <div className=\"__artsa\">\n          <div id=\"treebank_container\" className={styles.treebankContainer} />\n        </div>\n        <TreebankStyles />\n      </>\n    );\n  }\n}\n\nTreebank.propTypes = {\n  arethusa: PropTypes.instanceOf(ArethusaWrapper).isRequired,\n  chunks: chunksType.isRequired,\n  match: publicationMatchType.isRequired,\n  location: locationType.isRequired,\n  xml: PropTypes.string.isRequired,\n};\n\nexport default Treebank;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Treebank as TB,\n  Sentence,\n  Text,\n  Graph,\n  PartOfSpeech,\n  Xml,\n  Collapse,\n} from 'treebank-react';\nimport fetch from 'cross-fetch';\n\nimport { chunksType, publicationMatchType, locationType } from '../../lib/types';\n\nimport styles from './Treebank.module.css';\n\nimport ControlPanel from '../ControlPanel';\n\nimport { parse, linkParams } from '../../lib/params';\n\nclass Treebank extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      loadedXml: false,\n    };\n\n    this.additionalArgs = this.additionalArgs.bind(this);\n    this.linkQuery = this.linkQuery.bind(this);\n  }\n\n  componentDidMount() {\n    const { xml } = this.props;\n\n    fetch(`${process.env.PUBLIC_URL}/xml/${xml}`)\n      .then((response) => response.text())\n      .then((loadedXml) => {\n        this.setState({ loadedXml });\n      });\n  }\n\n  additionalArgs() {\n    const { location: { search } } = this.props;\n\n    return parse(search);\n  }\n\n  linkQuery() {\n    const { location: { search } } = this.props;\n\n    return linkParams(search);\n  }\n\n  render() {\n    const { chunks, match } = this.props;\n    const { params: { chunk } } = match;\n    const linkQuery = this.linkQuery();\n    const fullQuery = this.additionalArgs();\n\n    const { loadedXml } = this.state;\n    const { setSubdoc } = this.props;\n\n    if (!loadedXml) {\n      return (\n        <div>\n          Loading...\n        </div>\n      );\n    }\n\n    return (\n      <>\n        <ControlPanel\n          match={match}\n          chunks={chunks}\n          fullQuery={fullQuery}\n          linkQuery={linkQuery}\n        />\n        <div className=\"mb-4\">\n          <TB treebank={loadedXml}>\n            <Sentence id={chunk} callback={({ $: { subdoc } }) => setSubdoc(subdoc)}>\n              <div className={styles.text}>\n                <Text />\n              </div>\n              <div className={styles.graph}>\n                <Graph />\n              </div>\n              <PartOfSpeech />\n              <Collapse title=\"XML\">\n                <Xml />\n              </Collapse>\n            </Sentence>\n          </TB>\n        </div>\n      </>\n    );\n  }\n}\n\nTreebank.propTypes = {\n  chunks: chunksType.isRequired,\n  match: publicationMatchType.isRequired,\n  location: locationType.isRequired,\n  xml: PropTypes.string.isRequired,\n  setSubdoc: PropTypes.func.isRequired,\n};\n\nexport default Treebank;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { chunksType, publicationMatchType, locationType } from '../../lib/types';\n\nimport ArethusaWrapper from '../ArethusaWrapper';\n\nimport TreebankArethusa from './TreebankArethusa';\nimport TreebankReact from './TreebankReact';\n\nconst Treebank = ({\n  treebankReact,\n  ...props\n}) => {\n  if (treebankReact) {\n    return (\n      <TreebankReact {...props} />\n    );\n  }\n\n  return (\n    <TreebankArethusa {...props} />\n  );\n};\n\nTreebank.propTypes = {\n  arethusa: PropTypes.instanceOf(ArethusaWrapper).isRequired,\n  chunks: chunksType.isRequired,\n  match: publicationMatchType.isRequired,\n  location: locationType.isRequired,\n  xml: PropTypes.string.isRequired,\n  treebankReact: PropTypes.bool.isRequired,\n  setSubdoc: PropTypes.func.isRequired,\n};\n\nexport default Treebank;\n","import Treebank from './Treebank';\n\nexport default Treebank;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { chunksType, publicationMatchType, locationType } from '../../lib/types';\n\nimport styles from './Publication.module.css';\n\nimport Header from '../Header';\nimport ArethusaWrapper from '../ArethusaWrapper';\nimport Treebank from '../Treebank';\nimport Markdown from '../Markdown';\n\nconst renderText = (text) => {\n  if (Array.isArray(text)) {\n    return (\n      <div>\n        {text.map((t) => (\n          <span key={t}>\n            {t}\n            <br />\n          </span>\n        ))}\n      </div>\n    );\n  }\n\n  return text;\n};\n\nconst renderRow = (title, text) => (\n  <tr>\n    <th scope=\"col\">{title}</th>\n    <td className={styles.publicationRow}>\n      {renderText(text)}\n    </td>\n  </tr>\n);\n\nconst renderLinkRow = (title, link) => (\n  <tr>\n    <th scope=\"col\">{title}</th>\n    <td>\n      <a href={link}>{link}</a>\n    </td>\n  </tr>\n);\n\nconst renderMarkdownRow = (title, markdown) => (\n  <tr>\n    <th scope=\"col\">{title}</th>\n    <td className={styles.publicationRow}>\n      <Markdown source={markdown} />\n    </td>\n  </tr>\n);\n\nconst renderLocusRow = (title, text, publicationPath) => (\n  <tr>\n    <th scope=\"col\">{title}</th>\n    <td className={styles.publicationRow}>\n      {text}\n      {' '}\n      <a href={`../${publicationPath}`}>\n        (See all)\n      </a>\n    </td>\n  </tr>\n);\n\nclass Publication extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      arethusaLoaded: false,\n      subDoc: '',\n    };\n\n    this.setSubdoc = this.setSubdoc.bind(this);\n\n    this.arethusa = new ArethusaWrapper();\n  }\n\n  componentDidMount() {\n    // eslint-disable-next-line no-undef\n    window.document.body.addEventListener('ArethusaLoaded', this.setSubdoc);\n  }\n\n  componentDidUpdate(prevProps) {\n    const { arethusaLoaded } = this.state;\n    const { location } = this.props;\n    const { location: prevLocation } = prevProps;\n\n    if (arethusaLoaded && location !== prevLocation) {\n      this.setSubdoc();\n    }\n  }\n\n  componentWillUnmount() {\n    // eslint-disable-next-line no-undef\n    window.document.body.removeEventListener('ArethusaLoaded', this.setSubdoc);\n  }\n\n  setSubdoc() {\n    const subDoc = this.arethusa.getSubdoc();\n    this.setState({ subDoc, arethusaLoaded: true });\n  }\n\n  render() {\n    const {\n      logo,\n      link,\n      treebankReact,\n      publicationPath,\n      author,\n      work,\n      editors,\n      locus,\n      publicationLink,\n      license,\n      notes,\n      xml,\n      chunks,\n      match,\n      location,\n    } = this.props;\n\n    const { subDoc } = this.state;\n\n    return (\n      <>\n        <Header logo={logo} link={link}>\n          <span>\n            <i>{work}</i>\n          </span>\n          <ul className=\"navbar-nav ml-auto\">\n            <li className=\"nav-item\">\n              <a className=\"nav-link\" href={`${process.env.PUBLIC_URL}/`}>\n                Home\n              </a>\n            </li>\n          </ul>\n        </Header>\n        <div className=\"container pt-3\">\n          <h2>\n            <span>\n              {author}\n              ,\n              <i>\n                {' '}\n                {work}\n                {' '}\n              </i>\n              {locus}\n            </span>\n          </h2>\n          <table className=\"table\">\n            <tbody>\n              {!!author && renderRow('Author', author)}\n              {!!work && renderRow('Work', work)}\n              {!!locus && renderLocusRow('Locus', locus, publicationPath)}\n              {!!subDoc && renderRow('Reference', subDoc)}\n              {!!editors && renderRow('Editors', editors)}\n              {!!publicationLink && renderLinkRow('Link', publicationLink)}\n              {!!license && renderRow('License', license)}\n              {!!notes && renderMarkdownRow('Notes', notes)}\n            </tbody>\n          </table>\n          <div className={styles.treebankWrapper}>\n            <Treebank\n              xml={xml}\n              chunks={chunks}\n              location={location}\n              match={match}\n              arethusa={this.arethusa}\n              treebankReact={treebankReact}\n              setSubdoc={(s) => this.setState({ subDoc: s })}\n            />\n          </div>\n          <div className=\"pt-1 pb-4 text-right\">\n            <a href={`${process.env.PUBLIC_URL}/xml/${xml}`} target=\"_blank\" rel=\"noopener noreferrer\">\n              View full XML\n            </a>\n          </div>\n        </div>\n      </>\n    );\n  }\n}\n\nPublication.propTypes = {\n  logo: PropTypes.string,\n  link: PropTypes.string,\n  treebankReact: PropTypes.bool,\n  publicationPath: PropTypes.string.isRequired,\n  author: PropTypes.string.isRequired,\n  work: PropTypes.string.isRequired,\n  editors: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.arrayOf(PropTypes.string),\n  ]).isRequired,\n  locus: PropTypes.string.isRequired,\n  publicationLink: PropTypes.string,\n  license: PropTypes.string,\n  notes: PropTypes.string,\n  xml: PropTypes.string.isRequired,\n  chunks: chunksType.isRequired,\n  match: publicationMatchType.isRequired,\n  location: locationType.isRequired,\n};\n\nPublication.defaultProps = {\n  logo: undefined,\n  link: undefined,\n  treebankReact: false,\n  publicationLink: undefined,\n  license: undefined,\n  notes: undefined,\n};\n\nexport default Publication;\n","import Publication from './Publication';\n\nexport default Publication;\n","import React, { Component } from 'react';\nimport { configType, publicationMatchType, locationType } from '../../lib/types';\n\nimport Publication from '../Publication';\nimport NotFound from '../NotFound';\n\nclass PublicationDirector extends Component {\n  constructor(props) {\n    super(props);\n\n    const { config } = props;\n    const argsLookup = {};\n    const { logo, link, treebankReact } = config;\n\n    config.collections.forEach((collection) => {\n      (collection.publications || []).forEach((publication) => {\n        const {\n          author, work, editors, path: publicationPath,\n        } = publication;\n\n        publication.sections.forEach((section) => {\n          const {\n            path,\n            locus,\n            link: publicationLink,\n            license,\n            notes,\n            xml,\n            chunks,\n          } = section;\n\n          argsLookup[path] = {\n            logo,\n            link,\n            treebankReact,\n            publicationPath,\n            author,\n            work,\n            editors,\n            locus,\n            publicationLink,\n            license,\n            notes,\n            xml,\n            chunks,\n          };\n        });\n      });\n    });\n\n    this.argsLookup = argsLookup;\n  }\n\n  render() {\n    const { config, match, location } = this.props;\n    const { publication } = match.params;\n    const args = this.argsLookup[publication];\n\n    if (args === undefined) {\n      return <NotFound config={config} />;\n    }\n\n    return <Publication {...args} match={match} location={location} />;\n  }\n}\n\nPublicationDirector.propTypes = {\n  config: configType.isRequired,\n  match: publicationMatchType.isRequired,\n  location: locationType.isRequired,\n};\n\nexport default PublicationDirector;\n","import PublicationDirector from './PublicationDirector';\n\nexport default PublicationDirector;\n","import React from 'react';\n\nimport { configType } from '../../lib/types';\n\nimport Header from '../Header';\nimport Hero from '../Hero';\nimport Collection from '../Collection';\n\nconst renderCollection = (collection) => {\n  const { title, publications } = collection;\n\n  return (\n    <Collection\n      key={title}\n      title={title}\n      publications={publications}\n      expanded\n    />\n  );\n};\n\nconst PublicationGroup = ({\n  config: {\n    logo,\n    link,\n    title,\n    subtitle,\n    collections,\n  },\n}) => (\n  <>\n    <Header logo={logo} link={link}>\n      {title}\n      <ul className=\"navbar-nav ml-auto\">\n        <li className=\"nav-item\">\n          <a className=\"nav-link\" href={`${process.env.PUBLIC_URL}/`}>\n            Home\n          </a>\n        </li>\n      </ul>\n    </Header>\n    <Hero title={title} subtitle={subtitle} />\n    {collections.map((c) => renderCollection(c))}\n  </>\n);\n\nPublicationGroup.propTypes = {\n  config: configType.isRequired,\n};\n\nexport default PublicationGroup;\n","import PublicationGroup from './PublicationGroup';\n\nexport default PublicationGroup;\n","import React, { Component } from 'react';\n\nimport { configType, publicationGroupMatchType } from '../../lib/types';\n\nimport PublicationGroup from '../PublicationGroup';\nimport NotFound from '../NotFound';\n\nclass PublicationGroupDirector extends Component {\n  constructor(props) {\n    super(props);\n\n    const { config } = props;\n    const argsLookup = {};\n    const {\n      logo,\n      link,\n      title,\n      subtitle,\n      collections,\n    } = config;\n\n    collections.forEach((collection) => {\n      (collection.publications || []).forEach((publication) => {\n        const { path, author, work } = publication;\n\n        argsLookup[path] = {\n          logo,\n          link,\n          title,\n          subtitle,\n          collections: [\n            {\n              title: (\n                <>\n                  {author}\n                  ,\n                  {' '}\n                  <i>{work}</i>\n                </>\n              ),\n              publications: [publication],\n            },\n          ],\n        };\n      });\n    });\n\n    this.argsLookup = argsLookup;\n  }\n\n  render() {\n    const { config, match } = this.props;\n    const { publication } = match.params;\n    const newConfig = this.argsLookup[publication];\n\n    if (newConfig === undefined) {\n      return <NotFound config={config} />;\n    }\n\n    return <PublicationGroup config={newConfig} />;\n  }\n}\n\nPublicationGroupDirector.propTypes = {\n  config: configType.isRequired,\n  match: publicationGroupMatchType.isRequired,\n};\n\nexport default PublicationGroupDirector;\n","import PublicationGroupDirector from './PublicationGroupDirector';\n\nexport default PublicationGroupDirector;\n","import React from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport { PerseidsFooter } from 'perseids-react-components';\n\nimport { configType } from '../../lib/types';\n\nimport Home from '../Home';\nimport Instructions from '../Instructions';\nimport NotFound from '../NotFound';\nimport PublicationDirector from '../PublicationDirector';\nimport PublicationGroupDirector from '../PublicationGroupDirector';\n\nconst Page = ({\n  config,\n  config: {\n    copyright,\n    doi,\n    report,\n    github,\n    twitter,\n  },\n}) => (\n  <>\n    <Switch>\n      <Route exact path=\"/\" component={() => <Home config={config} />} />\n      <Route path=\"/instructions\" component={() => <Instructions config={config} />} />\n      <Route exact path=\"/:publication\" render={(props) => <PublicationGroupDirector {...props} config={config} />} />\n      <Route exact path=\"/:publication/:chunk\" render={(props) => <PublicationDirector {...props} config={config} />} />\n      <Route component={() => <NotFound config={config} />} />\n    </Switch>\n    <PerseidsFooter\n      copyright={copyright}\n      doi={doi}\n      report={report}\n      github={github}\n      twitter={twitter}\n    />\n  </>\n);\n\nPage.propTypes = {\n  config: configType.isRequired,\n};\n\nexport default Page;\n","import Page from './Page';\n\nexport default Page;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Redirect } from 'react-router-dom';\nimport {\n  MessagingService,\n  ResponseMessage,\n  WindowIframeDestination as Destination,\n} from 'alpheios-messaging';\nimport { buildQueryString } from '../../lib/params';\n\nimport ArethusaWrapper from '../ArethusaWrapper';\n\nconst config = {\n  name: 'treebank',\n  targetIframeID: 'string-not-used',\n  targetURL: 'string-not-used',\n  commModes: [Destination.commModes.RECEIVE],\n};\n\nconst error = (request, message, code) => ResponseMessage.Error(request, new Error(message), code);\n\nconst redirectLink = ({ wordIds, config: c, sentenceId }) => {\n  const query = buildQueryString({ w: wordIds, config: c });\n\n  if (query === '') {\n    return sentenceId;\n  }\n\n  return `${sentenceId}?${query}`;\n};\n\nclass TreebankService extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      arethusaLoaded: false,\n      redirectTo: null,\n    };\n    this.messageHandler = this.messageHandler.bind(this);\n    this.setArethusaLoaded = this.setArethusaLoaded.bind(this);\n  }\n\n  componentDidMount() {\n    this.destination = new Destination({ ...config, receiverCB: this.messageHandler });\n    this.service = new MessagingService('treebank-service', this.destination);\n\n    // eslint-disable-next-line no-undef\n    window.document.body.addEventListener('ArethusaLoaded', this.setArethusaLoaded);\n  }\n\n  componentWillUnmount() {\n    this.destination.deregister();\n\n    // eslint-disable-next-line no-undef\n    window.document.body.removeEventListener('ArethusaLoaded', this.setArethusaLoaded);\n  }\n\n  setArethusaLoaded() {\n    this.setState({ arethusaLoaded: true });\n  }\n\n  messageHandler(request, responseFn) {\n    const { arethusa } = this.props;\n    const { arethusaLoaded } = this.state;\n    const { body } = request;\n    const [name] = Object.keys(body);\n\n    if (!arethusaLoaded) {\n      responseFn(error(request, 'Arethusa is Not Loaded', ResponseMessage.errorCodes.SERVICE_UNINITIALIZED));\n      return;\n    }\n\n    try {\n      switch (name) {\n        case 'gotoSentence':\n          this.setState({\n            redirectTo: redirectLink(body.gotoSentence),\n          });\n\n          responseFn(ResponseMessage.Success(request, { status: 'success' }));\n          break;\n        case 'getMorph':\n          responseFn(ResponseMessage.Success(\n            request,\n            arethusa.getMorph(body.getMorph.sentenceId, body.getMorph.wordId),\n          ));\n          break;\n        case 'refreshView':\n          responseFn(ResponseMessage.Success(request, arethusa.refreshView()));\n          break;\n        case 'findWord':\n          responseFn(\n            ResponseMessage.Success(\n              request,\n              arethusa.findWord(\n                body.findWord.sentenceId,\n                body.findWord.word,\n                body.findWord.prefix,\n                body.findWord.suffix,\n              ),\n            ),\n          );\n          break;\n        default:\n          responseFn(error(request, `Unsupported request: ${name}`, ResponseMessage.errorCodes.UNKNOWN_REQUEST));\n      }\n    } catch (err) {\n      responseFn(ResponseMessage.Error(request, err, ResponseMessage.errorCodes.INTERNAL_ERROR));\n    }\n  }\n\n  render() {\n    const { redirectTo } = this.state;\n\n    return (\n      redirectTo && <Redirect to={redirectTo} />\n    );\n  }\n}\n\nTreebankService.propTypes = {\n  arethusa: PropTypes.instanceOf(ArethusaWrapper).isRequired,\n};\n\nexport default TreebankService;\n","import TreebankService from './TreebankService';\n\nexport default TreebankService;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { publicationMatchType, locationType } from '../../lib/types';\n\nimport styles from './EmbeddedTreebank.module.css';\n\nimport ArethusaWrapper from '../ArethusaWrapper';\nimport TreebankStyles from '../TreebankStyles';\nimport TreebankService from '../TreebankService';\n\nimport { parse } from '../../lib/params';\n\nclass EmbeddedTreebank extends Component {\n  componentDidMount() {\n    this.renderArethusa();\n  }\n\n  componentDidUpdate() {\n    this.renderArethusa();\n  }\n\n  renderArethusa() {\n    const {\n      xml,\n      match: { params: { chunk } },\n      arethusa: { render },\n      location: { search },\n    } = this.props;\n    const additionalArgs = parse(search);\n\n    render(xml, chunk, additionalArgs);\n  }\n\n  render() {\n    const { match, arethusa } = this.props;\n    const { params: { publication, chunk } } = match;\n\n    return (\n      <>\n        <div className=\"__artsa\">\n          <div id=\"treebank_container\" className={styles.treebankContainer} />\n        </div>\n        <div className={styles.links}>\n          <a href={`${process.env.PUBLIC_URL}/${publication}/${chunk}`} target=\"_blank\" rel=\"noopener noreferrer\">\n            Credits and more information\n          </a>\n        </div>\n        <TreebankStyles />\n        <TreebankService arethusa={arethusa} />\n      </>\n    );\n  }\n}\n\nEmbeddedTreebank.propTypes = {\n  arethusa: PropTypes.instanceOf(ArethusaWrapper).isRequired,\n  match: publicationMatchType.isRequired,\n  location: locationType.isRequired,\n  xml: PropTypes.string.isRequired,\n};\n\nexport default EmbeddedTreebank;\n","import EmbeddedTreebank from './EmbeddedTreebank';\n\nexport default EmbeddedTreebank;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { publicationMatchType, locationType } from '../../lib/types';\n\nimport ArethusaWrapper from '../ArethusaWrapper';\nimport EmbeddedTreebank from '../EmbeddedTreebank';\n\nclass EmbeddedPublication extends Component {\n  constructor(props) {\n    super(props);\n\n    this.arethusa = new ArethusaWrapper();\n  }\n\n  render() {\n    const {\n      xml,\n      match,\n      location,\n    } = this.props;\n\n    return (\n      <div>\n        <EmbeddedTreebank\n          xml={xml}\n          location={location}\n          match={match}\n          arethusa={this.arethusa}\n        />\n      </div>\n    );\n  }\n}\n\nEmbeddedPublication.propTypes = {\n  xml: PropTypes.string.isRequired,\n  match: publicationMatchType.isRequired,\n  location: locationType.isRequired,\n};\n\nexport default EmbeddedPublication;\n","import EmbeddedPublication from './EmbeddedPublication';\n\nexport default EmbeddedPublication;\n","import React from 'react';\n\nconst EmbeddedNotFound = () => (\n  <div className=\"container pt-5\">\n    <div className=\"row col-12 pt-5 pb-3\">\n      <div className=\"col-12 text-center\">\n        <h1>Error 404</h1>\n      </div>\n    </div>\n    <div className=\"row col-12 pb-3\">\n      <div className=\"col-12 text-center\">\n        <h2>Publication not found</h2>\n      </div>\n    </div>\n  </div>\n);\n\nexport default EmbeddedNotFound;\n","import EmbeddedNotFound from './EmbeddedNotFound';\n\nexport default EmbeddedNotFound;\n","import React, { Component } from 'react';\nimport { configType, publicationMatchType, locationType } from '../../lib/types';\n\nimport EmbeddedPublication from '../EmbeddedPublication';\nimport EmbeddedNotFound from '../EmbeddedNotFound';\n\nclass EmbeddedPublicationDirector extends Component {\n  constructor(props) {\n    super(props);\n\n    const { config } = props;\n    const argsLookup = {};\n\n    config.collections.forEach((collection) => {\n      (collection.publications || []).forEach((publication) => {\n        publication.sections.forEach((section) => {\n          const { path, xml } = section;\n\n          argsLookup[path] = { xml };\n        });\n      });\n    });\n\n    this.argsLookup = argsLookup;\n  }\n\n  render() {\n    const { config, match, location } = this.props;\n    const { publication } = match.params;\n    const args = this.argsLookup[publication];\n\n    if (args === undefined) {\n      return <EmbeddedNotFound config={config} />;\n    }\n\n    const { xml } = args;\n\n    return <EmbeddedPublication xml={xml} match={match} location={location} />;\n  }\n}\n\nEmbeddedPublicationDirector.propTypes = {\n  config: configType.isRequired,\n  match: publicationMatchType.isRequired,\n  location: locationType.isRequired,\n};\n\nexport default EmbeddedPublicationDirector;\n","import EmbeddedPublicationDirector from './EmbeddedPublicationDirector';\n\nexport default EmbeddedPublicationDirector;\n","import React from 'react';\nimport { Route, Switch } from 'react-router-dom';\n\nimport { configType } from '../../lib/types';\n\nimport EmbeddedPublicationDirector from '../EmbeddedPublicationDirector';\nimport EmbeddedNotFound from '../EmbeddedNotFound';\n\nconst Embedded = ({ config }) => (\n  <Switch>\n    <Route exact path=\"/embed/:publication/:chunk\" render={(props) => <EmbeddedPublicationDirector {...props} config={config} />} />\n    <Route path=\"/\" component={() => <EmbeddedNotFound config={config} />} />\n  </Switch>\n);\n\nEmbedded.propTypes = {\n  config: configType.isRequired,\n};\n\nexport default Embedded;\n","import Embedded from './Embedded';\n\nexport default Embedded;\n","import React from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\n\nimport config from '../../config.json';\n\nimport Page from '../Page';\nimport Embedded from '../Embedded';\n\nconst App = () => (\n  <Router basename={process.env.PUBLIC_URL}>\n    <Switch>\n      <Route path=\"/embed/\" component={() => <Embedded config={config} />} />\n      <Route path=\"/\" component={() => <Page config={config} />} />\n    </Switch>\n  </Router>\n);\n\nexport default App;\n","import App from './App';\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'perseids-react-components/build/css/index.css';\nimport 'treebank-react/build/index.css';\n\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"treebankContainer\":\"Treebank_treebankContainer__sQn_K\",\"text\":\"Treebank_text__38CzO\",\"graph\":\"Treebank_graph__1l6uy\"};","module.exports = __webpack_public_path__ + \"static/media/commit.73e1f04f.png\";","module.exports = __webpack_public_path__ + \"static/media/zenodo-authorize.3c5ca132.png\";","module.exports = __webpack_public_path__ + \"static/media/zenodo-dropdown.53933fe7.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"publicationRow\":\"Publication_publicationRow__3taiJ\",\"treebankWrapper\":\"Publication_treebankWrapper__2KYz-\"};"],"sourceRoot":""}