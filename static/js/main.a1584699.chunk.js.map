{"version":3,"sources":["components/ControlPanel/ControlPanel.module.css","lib/types.js","components/Header/Header.js","components/Header/index.js","components/Markdown/Markdown.js","components/Markdown/index.js","components/Hero/index.js","components/Hero/Hero.js","components/Collection/Collection.js","components/Collection/index.js","components/Home/index.js","components/Home/Home.js","components/ArethusaWrapper/ArethusaConfig.js","components/ArethusaWrapper/ArethusaWrapper.js","components/ArethusaWrapper/index.js","components/ControlPanel/ControlPanel.js","components/ControlPanel/index.js","lib/params.js","components/Treebank/index.js","components/Treebank/Treebank.js","components/Publication/Publication.js","components/Publication/index.js","components/NotFound/index.js","components/NotFound/NotFound.js","components/PublicationDirector/index.js","components/PublicationDirector/PublicationDirector.js","components/PublicationGroup/index.js","components/PublicationGroup/PublicationGroup.js","components/PublicationGroupDirector/index.js","components/PublicationGroupDirector/PublicationGroupDirector.js","components/Page/index.js","components/Page/Page.js","components/TreebankService/TreebankService.js","components/TreebankService/index.js","components/EmbeddedTreebank/index.js","components/EmbeddedTreebank/EmbeddedTreebank.js","components/EmbeddedPublication/index.js","components/EmbeddedPublication/EmbeddedPublication.js","components/EmbeddedNotFound/index.js","components/EmbeddedNotFound/EmbeddedNotFound.js","components/EmbeddedPublicationDirector/index.js","components/EmbeddedPublicationDirector/EmbeddedPublicationDirector.js","components/Embedded/index.js","components/Embedded/Embedded.js","components/App/index.js","components/App/App.js","serviceWorker.js","index.js","components/Publication/Publication.module.css","components/EmbeddedTreebank/EmbeddedTreebank.module.css","components/Hero/Hero.module.css","components/Treebank/Treebank.module.css"],"names":["module","exports","chunksType","shape","start","number","end","numbers","arrayOf","oneOfType","string","sectionType","locus","isRequired","path","xml","link","notes","chunks","publicationType","author","work","editors","sections","collectionType","title","element","publications","text","Header","logo","subtitle","copyright","doi","report","github","twitter","collections","search","params","chunk","publication","w","config","children","undefined","props","href","defaultProps","transformLinkUri","uri","uriTransformer","process","Markdown","Hero","className","styles","jumbotronSmall","source","renderSubtitle","renderRow","key","scope","Array","isArray","map","e","renderEditors","s","section","getStart","renderSection","Collection","p","Home","c","collection","renderCollection","defaultConfig","main","debug","showKeys","chunkParam","auxConfPath","retrievers","TreebankRetriever","resource","docIdentifier","preselector","plugins","layouts","name","template","notifier","disable","navigator","chunkSize","navbar","resources","Gardener","route","lexInvFusekiEndpoint","morphologyServiceLat","newMorphologyServiceLat","morphologyServiceGrc","newMorphologyServiceGrc","morphologyServicePer","citeMapper","sgGrammar","depTree","contextMenu","contextMenuTemplate","morph","BspMorphRetriever","lexicalInventory","retriever","LexicalInventoryRetriever","matchAll","noRetrieval","regex","relation","advancedMode","relations","keyCapture","greek","α","ε","η","ι","ο","υ","ω","keys","sidepanelConfig","JSON","parse","stringify","remoteUrl","ArethusaWrapper","this","render","bind","doc","a","b","window","Arethusa","$","widget","sort","join","gotoSentence","remove","removeToastContainer","on","from","with","getConfig","api","words","getSubdoc","sentenceId","wordId","getMorph","refreshView","word","prefix","suffix","findWord","min","max","ControlPanel","state","refIsOpen","settingsIsOpen","getLines","getFbcnl","createLink","toggleRefOpen","toggleSettingsOpen","renderSettingsLinks","lines","ii","push","match","index","Number","indexOf","length","getFbcnlFromNumbers","to","linkQuery","Object","entries","query","queryString","setState","fullQuery","newConfig","first","back","current","next","last","id","dummyIcon","dropdownButton","type","aria-haspopup","aria-expanded","onClick","dropdownScroll","n","icon","Settings","Component","convertToType","value","parsed","arrayFormat","result","forEach","prototype","hasOwnProperty","call","Treebank","additionalArgs","renderArethusa","location","linkParams","arethusa","treebankContainer","publicationRow","t","renderText","Publication","arethusaLoaded","subDoc","setSubdoc","document","body","addEventListener","prevProps","prevLocation","removeEventListener","markdown","publicationPath","publicationLink","renderLocusRow","renderLinkRow","treebankWrapper","target","rel","NotFound","PublicationDirector","argsLookup","args","PublicationGroup","PublicationGroupDirector","Page","exact","component","targetIframeID","targetURL","commModes","Destination","RECEIVE","error","request","message","code","ResponseMessage","Error","redirectLink","queryParams","wordIds","TreebankService","redirectTo","messageHandler","setArethusaLoaded","destination","receiverCB","service","MessagingService","deregister","responseFn","Success","status","errorCodes","UNKNOWN_REQUEST","err","INTERNAL_ERROR","SERVICE_UNINITIALIZED","EmbeddedTreebank","links","EmbeddedPublication","EmbeddedNotFound","EmbeddedPublicationDirector","Embedded","App","basename","Boolean","hostname","ReactDOM","getElementById","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.a1584699.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dropdownButton\":\"ControlPanel_dropdownButton__1o6TV\",\"dropdownScroll\":\"ControlPanel_dropdownScroll__17rgQ\",\"dummyIcon\":\"ControlPanel_dummyIcon__3Nk3N\",\"link\":\"ControlPanel_link__OEqVs\"};","import {\n  arrayOf, number, shape, string, oneOfType, element,\n} from 'prop-types';\n\nexport const chunksType = shape({\n  start: number,\n  end: number,\n  numbers: arrayOf(oneOfType([string])),\n});\n\nexport const sectionType = shape({\n  locus: string.isRequired,\n  path: string.isRequired,\n  xml: string.isRequired,\n  link: string,\n  notes: string,\n  chunks: chunksType.isRequired,\n});\n\nexport const publicationType = shape({\n  path: string.isRequired,\n  author: string.isRequired,\n  work: string.isRequired,\n  editors: oneOfType([string, arrayOf(string)]).isRequired,\n  sections: arrayOf(sectionType).isRequired,\n});\n\nexport const collectionType = shape({\n  title: oneOfType([string, element]).isRequired,\n  publications: arrayOf(publicationType),\n  text: string,\n});\n\nexport const configType = shape({\n  logo: string,\n  link: string,\n  title: oneOfType([string, element]).isRequired,\n  subtitle: string.isRequired,\n  copyright: string,\n  doi: string,\n  report: string,\n  github: string,\n  twitter: string,\n  collections: arrayOf(collectionType).isRequired,\n});\n\nexport const locationType = shape({\n  search: string.isRequired,\n});\n\nexport const publicationMatchType = shape({\n  params: shape({\n    chunk: string.isRequired,\n  }).isRequired,\n});\n\nexport const publicationGroupMatchType = shape({\n  params: shape({\n    publication: string.isRequired,\n  }).isRequired,\n});\n\nexport const queryType = shape({\n  w: arrayOf(string),\n  config: string,\n});\n","import React from 'react';\nimport { string, node } from 'prop-types';\nimport { PerseidsHeader } from 'perseids-react-components';\n\nconst Header = ({ logo, link, children }) => {\n  if (link !== undefined) {\n    return <PerseidsHeader logo={logo} props={{ href: link }}>{children}</PerseidsHeader>;\n  }\n\n  return <PerseidsHeader logo={logo}>{children}</PerseidsHeader>;\n};\n\nHeader.propTypes = {\n  logo: string,\n  link: string,\n  children: node.isRequired,\n};\n\nHeader.defaultProps = {\n  logo: undefined,\n  link: undefined,\n};\n\nexport default Header;\n","import Header from './Header';\n\nexport default Header;\n","import React from 'react';\nimport ReactMarkdown, { uriTransformer } from 'react-markdown';\n\nconst transformLinkUri = (uri) => (\n  uriTransformer(uri[0] === '/' ? `${process.env.PUBLIC_URL}${uri}` : uri)\n);\n\nconst Markdown = (props) => (\n  <ReactMarkdown\n    {...props}\n    transformLinkUri={transformLinkUri}\n  />\n);\n\nexport default Markdown;\n","import Markdown from './Markdown';\n\nexport default Markdown;\n","import Hero from './Hero';\n\nexport default Hero;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport styles from './Hero.module.css';\n\nimport Markdown from '../Markdown';\n\nconst renderSubtitle = (subtitle) => (\n  <Markdown source={subtitle} />\n);\n\nconst Hero = ({ title, subtitle }) => (\n  <div className={`jumbotron jumbotron-fluid bg-dark ${styles.jumbotronSmall}`}>\n    <div className=\"container text-light\">\n      <h1 className=\"display-4\">\n        {title}\n      </h1>\n      {subtitle && renderSubtitle(subtitle)}\n    </div>\n  </div>\n);\n\nHero.propTypes = {\n  title: PropTypes.string.isRequired,\n  subtitle: PropTypes.string.isRequired,\n};\n\nexport default Hero;\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { publicationType } from '../../lib/types';\n\nimport Markdown from '../Markdown';\n\nconst getStart = (chunks) => {\n  const { start, numbers } = chunks;\n\n  if (start) {\n    return start;\n  }\n\n  return numbers[0];\n};\n\nconst renderSection = (section) => {\n  const { locus, path, chunks } = section;\n  const start = getStart(chunks);\n\n  return (\n    <Fragment key={path}>\n      <a href={`${path}/${start}`}>\n        {locus}\n      </a>\n      <br />\n    </Fragment>\n  );\n};\n\nconst renderEditors = (editors) => {\n  if (Array.isArray(editors)) {\n    return (\n      <ul className=\"pl-1\">\n        {editors.map((e) => <li key={e}>{e}</li>)}\n      </ul>\n    );\n  }\n\n  return editors;\n};\n\nconst renderRow = (publication) => {\n  const {\n    path,\n    author,\n    work,\n    editors,\n    sections,\n  } = publication;\n\n  return (\n    <tr className=\"d-flex\" key={path}>\n      <th className=\"col-md-3 d-none d-md-block\" scope=\"row\">{author}</th>\n      <td className=\"col-md-4 d-none d-md-block\">{work}</td>\n      <td className=\"col-8 col-sm-7 d-block d-md-none\">\n        <strong>{author}</strong>\n        ,\n        {' '}\n        <em>{work}</em>\n      </td>\n      <td className=\"col-md-3 col-lg-3 d-none d-md-block\">\n        {renderEditors(editors)}\n      </td>\n      <td className=\"col-4 col-sm-5 col-md-2 col-lg-2 text-right\">\n        {sections.map((s) => renderSection(s))}\n      </td>\n    </tr>\n  );\n};\n\nconst Collection = ({ title, publications, text }) => (\n  <div className=\"container\">\n    <div className=\"row pb-3\">\n      <div className=\"col-12\">\n        {title && <h2>{title}</h2>}\n        {text && <Markdown source={text} />}\n        <table className=\"table\">\n          {publications && (\n            <>\n              <thead className=\"thead-light\">\n                <tr className=\"d-flex\">\n                  <th className=\"col-md-3 d-none d-md-block\" scope=\"col\">Author</th>\n                  <th className=\"col-8 col-sm-7 col-md-4\" scope=\"col\">Work</th>\n                  <th className=\"col-md-3 col-lg-3 d-none d-md-block\" scope=\"col\">Editors</th>\n                  <th className=\"col-4 col-sm-5 col-md-2 col-lg-2\" scope=\"col\">Locus</th>\n                </tr>\n              </thead>\n              <tbody>\n                {publications.map((p) => renderRow(p))}\n              </tbody>\n            </>\n          )}\n        </table>\n      </div>\n    </div>\n  </div>\n);\n\nCollection.propTypes = {\n  title: PropTypes.oneOfType([PropTypes.string, PropTypes.element]).isRequired,\n  publications: PropTypes.arrayOf(publicationType),\n  text: PropTypes.string,\n};\n\nCollection.defaultProps = {\n  publications: undefined,\n  text: undefined,\n};\n\nexport default Collection;\n","import Collection from './Collection';\n\nexport default Collection;\n","import Home from './Home';\n\nexport default Home;\n","import React from 'react';\n\nimport { configType } from '../../lib/types';\n\nimport Header from '../Header';\nimport Hero from '../Hero';\nimport Collection from '../Collection';\n\nconst renderCollection = (collection) => {\n  const { title, text, publications } = collection;\n\n  return (\n    <Collection\n      key={title}\n      title={title}\n      text={text}\n      publications={publications}\n    />\n  );\n};\n\nconst Home = ({ config }) => {\n  const {\n    logo,\n    link,\n    title,\n    subtitle,\n    collections,\n  } = config;\n\n  return (\n    <>\n      <Header logo={logo} link={link}>\n        {title}\n      </Header>\n      <Hero title={title} subtitle={subtitle} />\n      {collections.map((c) => renderCollection(c))}\n    </>\n  );\n};\n\nHome.propTypes = {\n  config: configType.isRequired,\n};\n\nexport default Home;\n","const defaultConfig = {\n  main: {\n    debug: false,\n    showKeys: false,\n    chunkParam: 'chunk',\n    auxConfPath: `${process.env.PUBLIC_URL}/arethusa/configs`,\n    retrievers: {\n      TreebankRetriever: {\n        resource: 'Gardener',\n        docIdentifier: 'treebank',\n        preselector: 'w',\n      },\n    },\n    plugins: [\n      'text',\n      'morph',\n      'relation',\n      'depTree',\n      'search',\n    ],\n    layouts: [\n      {\n        name: 'widget',\n        template: 'js/templates/widget.html',\n      },\n    ],\n  },\n  notifier: {\n    disable: true,\n  },\n  navigator: {\n    chunkSize: 1,\n  },\n  navbar: false,\n  resources: {\n    Gardener: {\n      route: `${process.env.PUBLIC_URL}/xml/:doc`,\n      params: [\n        'doc',\n      ],\n    },\n    lexInvFusekiEndpoint: {\n      route: 'https://fuseki.perseids.org/fuseki/ds/query?format=json',\n    },\n    morphologyServiceLat: {\n      route: 'https://services.perseids.org/bsp/morphologyservice/analysis/word?lang=lat&engine=morpheuslat',\n    },\n    newMorphologyServiceLat: {\n      route: 'https://morph.perseids.org/analysis/word?lang=lat&engine=morpheuslat',\n    },\n    morphologyServiceGrc: {\n      route: 'https://services.perseids.org/bsp/morphologyservice/analysis/word?lang=grc&engine=morpheusgrc',\n    },\n    newMorphologyServiceGrc: {\n      route: 'https://morph.perseids.org/analysis/word?lang=grc&engine=morpheusgrc',\n    },\n    morphologyServicePer: {\n      route: 'https://localhost/extapi/morphologyservice/analysis/word?lang=per&engine=hazm',\n    },\n    citeMapper: {\n      route: 'https://services.perseids.org/cite_mapper/find_cite',\n    },\n    sgGrammar: {\n      route: 'https://services.perseids.org/sg/:doc.html',\n    },\n  },\n  plugins: {\n    text: {\n      main: true,\n      template: 'js/templates/text_with_context.html',\n    },\n    depTree: {\n      main: true,\n      contextMenu: false,\n      contextMenuTemplate: 'js/arethusa.dep_tree/templates/context_menu.html',\n      template: 'js/templates/dep_tree.html',\n    },\n    morph: {\n      retrievers: {\n        BspMorphRetriever: {\n          resource: 'morphologyServiceLat',\n        },\n      },\n      template: 'js/templates/morph3.html',\n      contextMenu: true,\n      contextMenuTemplate: 'js/arethusa.morph/templates/context_menu.html',\n      lexicalInventory: {\n        retriever: {\n          LexicalInventoryRetriever: {\n            resource: 'lexInvFusekiEndpoint',\n          },\n        },\n      },\n      matchAll: true,\n      '@include': 'js/arethusa.morph/configs/morph/lat_attributes.json',\n      noRetrieval: 'online',\n    },\n    search: {\n      template: 'js/templates/search.html',\n      regex: true,\n    },\n    relation: {\n      advancedMode: true,\n      relations: {},\n    },\n  },\n  keyCapture: {\n    regex: {\n      greek: {\n        α: '[\\u03b1\\u1f01\\u1f05\\u1f03\\u1f07\\u1f00\\u1f04\\u1f02\\u1f06\\u03ac\\u1f70\\u1fb6\\u1f81\\u1f85\\u1f83\\u1f87\\u1f80\\u1f84\\u1f82\\u1f86\\u1fb4\\u1fb2\\u1fb7\\u1fb3]',\n        ε: '[\\u03b5\\u03ad\\u1f72\\u1f10\\u1f11\\u1f14\\u1f12\\u1f15\\u1f13]',\n        η: '[\\u03b7\\u1f21\\u1f25\\u1f23\\u1f27\\u1f20\\u1f24\\u1f22\\u1f26\\u03ae\\u1f74\\u1fc6\\u1f91\\u1f95\\u1f93\\u1f97\\u1f90\\u1f94\\u1f92\\u1f96\\u1fc4\\u1fc2\\u1fc7\\u1fc3]',\n        ι: '[\\u03b9\\u1f31\\u1f35\\u1f33\\u1f37\\u1f30\\u1f34\\u1f32\\u1f36\\u03af\\u1f76\\u1fd6]',\n        ο: '[\\u03bf\\u03cc\\u1f78\\u1f40\\u1f41\\u1f44\\u1f42\\u1f45\\u1f43]',\n        υ: '[\\u03c5\\u1f51\\u1f55\\u1f53\\u1f57\\u1f50\\u1f54\\u1f52\\u1f56\\u03cd\\u1f7a\\u1fe6]',\n        ω: '[\\u03c9\\u1f61\\u1f65\\u1f63\\u1f67\\u1f60\\u1f64\\u1f62\\u1f66\\u03ce\\u1f7c\\u1ff6\\u1fa1\\u1fa5\\u1fa3\\u1fa7\\u1fa0\\u1fa4\\u1fa2\\u1fa6\\u1ff4\\u1ff2\\u1ff7\\u1ff3]',\n      },\n    },\n    keys: {},\n  },\n};\n\nconst sidepanelConfig = JSON.parse(JSON.stringify(defaultConfig));\nsidepanelConfig.main.layouts = [\n  {\n    name: 'main_with_sidepanel',\n    template: 'js/templates/main_with_sidepanel.html',\n  },\n];\n\nexport { defaultConfig, sidepanelConfig };\n","import { defaultConfig, sidepanelConfig } from './ArethusaConfig';\n\nimport './custom.css';\n\nconst elementId = 'treebank_container';\nconst remoteUrl = `${process.env.PUBLIC_URL}/arethusa`;\n\nconst removeToastContainer = ($) => {\n  $('#toast-container').remove();\n};\n\nconst getConfig = (config) => {\n  if (config === 'sidepanel') {\n    return sidepanelConfig;\n  }\n\n  return defaultConfig;\n};\n\nconst wordsDiffer = (a, b) => {\n  const aList = (a || []).sort().join(',');\n  const bList = (b || []).sort().join(',');\n\n  return aList !== bList;\n};\n\nclass ArethusaWrapper {\n  constructor() {\n    this.render = this.render.bind(this);\n  }\n\n  render(doc, chunk, { config, w }) {\n    // eslint-disable-next-line no-undef\n    const { Arethusa, $ } = window;\n\n    if (this.widget) {\n      if (this.doc === doc && (this.chunk !== chunk || wordsDiffer(this.w, w))) {\n        this.gotoSentence(chunk, w);\n        removeToastContainer($);\n      }\n    } else {\n      this.widget = new Arethusa();\n\n      this.widget\n        .on(elementId)\n        .from(remoteUrl)\n        .with(getConfig(config))\n        .start({ doc, chunk, w });\n\n      this.api = this.widget.api();\n    }\n\n    this.doc = doc;\n    this.chunk = chunk;\n    this.w = w;\n  }\n\n  gotoSentence(chunk, words) {\n    return this.api.gotoSentence(chunk, words);\n  }\n\n  getSubdoc() {\n    return this.api.getSubdoc();\n  }\n\n  getMorph(sentenceId, wordId) {\n    return this.api.getMorph(sentenceId, wordId);\n  }\n\n  refreshView() {\n    return this.api.refreshView();\n  }\n\n  findWord(sentenceId, word, prefix, suffix) {\n    return this.api.findWord(sentenceId, word, prefix, suffix);\n  }\n}\n\nexport default ArethusaWrapper;\n","import ArethusaWrapper from './ArethusaWrapper';\n\nexport default ArethusaWrapper;\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport Octicon, { Settings } from '@primer/octicons-react';\nimport queryString from 'query-string';\n\nimport { chunksType, publicationMatchType, queryType } from '../../lib/types';\n\nimport styles from './ControlPanel.module.css';\n\nconst min = (a, b) => (a < b ? a : b);\nconst max = (a, b) => (a > b ? a : b);\n\nconst getFbcnlFromNumbers = (chunk, numbers) => {\n  const index = numbers.indexOf(chunk);\n\n  return [\n    numbers[0],\n    numbers[max(0, index - 1)],\n    chunk,\n    numbers[min(numbers.length - 1, index + 1)],\n    numbers[numbers.length - 1],\n  ];\n};\n\nclass ControlPanel extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      refIsOpen: false,\n      settingsIsOpen: false,\n    };\n\n    this.getLines = this.getLines.bind(this);\n    this.getFbcnl = this.getFbcnl.bind(this);\n    this.createLink = this.createLink.bind(this);\n    this.toggleRefOpen = this.toggleRefOpen.bind(this);\n    this.toggleSettingsOpen = this.toggleSettingsOpen.bind(this);\n    this.renderSettingsLinks = this.renderSettingsLinks.bind(this);\n  }\n\n  getLines() {\n    const { chunks: { start, end, numbers } } = this.props;\n\n    if (numbers) {\n      return numbers;\n    }\n\n    const lines = [];\n    for (let ii = start; ii <= end; ii += 1) {\n      lines.push(ii);\n    }\n\n    return lines;\n  }\n\n  getFbcnl() {\n    const { chunks: { start, end, numbers }, match } = this.props;\n    const { params: { chunk } } = match;\n    const index = Number(chunk);\n\n    if (numbers) {\n      return getFbcnlFromNumbers(chunk, numbers);\n    }\n\n    return [\n      start,\n      max(start, index - 1),\n      chunk,\n      min(end, index + 1),\n      end,\n    ];\n  }\n\n  createLink(to) {\n    const { linkQuery } = this.props;\n    const link = `./${to}`;\n\n    if (Object.entries(linkQuery).length > 0) {\n      const query = queryString.stringify(linkQuery);\n\n      return `${link}?${query}`;\n    }\n\n    return link;\n  }\n\n  toggleRefOpen() {\n    this.setState(({ refIsOpen }) => ({ refIsOpen: !refIsOpen }));\n  }\n\n  toggleSettingsOpen() {\n    this.setState(({ settingsIsOpen }) => ({ settingsIsOpen: !settingsIsOpen }));\n  }\n\n  renderSettingsLinks() {\n    const { fullQuery } = this.props;\n    const { config } = fullQuery;\n    const newConfig = config === 'sidepanel' ? 'default' : 'sidepanel';\n    const text = config === 'sidepanel' ? 'Hide morphology' : 'Show morphology';\n\n    return (\n      <a\n        href={`?${queryString.stringify({ ...fullQuery, config: newConfig })}`}\n        className=\"dropdown-item\"\n      >\n        {text}\n      </a>\n    );\n  }\n\n  render() {\n    const { refIsOpen, settingsIsOpen } = this.state;\n    const [first, back, current, next, last] = this.getFbcnl();\n    const lines = this.getLines();\n\n    return (\n      <nav className=\"navbar navbar-expand navbar-dark bg-dark\">\n        <div className=\"collapse navbar-collapse\" id=\"controlPanel\">\n          <ul className={`navbar-nav mr-auto ${styles.dummyIcon}`} />\n          <ul className=\"navbar-nav mx-auto\">\n            <li className=\"nav-item\">\n              <Link className={`nav-link text-light ${styles.link}`} to={this.createLink(first)}>\n                &laquo; First\n              </Link>\n            </li>\n            <li className=\"nav-item\">\n              <Link className={`nav-link text-light ${styles.link}`} to={this.createLink(back)}>\n                &#8249; Back\n              </Link>\n            </li>\n            <li className=\"nav-item dropdown\">\n              <button className={`btn btn-link nav-link text-light dropdown-toggle ${styles.dropdownButton}`} type=\"button\" aria-haspopup=\"true\" aria-expanded={refIsOpen} onClick={this.toggleRefOpen}>\n                {current}\n              </button>\n              <div className={`dropdown-menu ${styles.dropdownScroll} ${refIsOpen ? 'show' : ''}`}>\n                {\n                  lines.map((n) => (\n                    <Link className=\"dropdown-item\" key={n} to={this.createLink(n)} onClick={this.toggleRefOpen}>\n                      {n}\n                    </Link>\n                  ))\n                }\n              </div>\n            </li>\n            <li className=\"nav-item\">\n              <Link className={`nav-link text-light ${styles.link}`} to={this.createLink(next)}>\n                Next &#8250;\n              </Link>\n            </li>\n            <li>\n              <Link className={`nav-link text-light ${styles.link}`} to={this.createLink(last)}>\n                Last &raquo;\n              </Link>\n            </li>\n          </ul>\n          <ul className=\"navbar-nav ml-auto\">\n            <li className=\"nav-item dropdown dropleft\">\n              <button className=\"btn btn-link nav-link text-light\" type=\"button\" aria-haspopup=\"true\" aria-expanded={settingsIsOpen} onClick={this.toggleSettingsOpen}>\n                <Octicon icon={Settings} />\n              </button>\n              <div className={`dropdown-menu ${styles.dropdownScroll} ${settingsIsOpen ? 'show' : ''}`}>\n                {this.renderSettingsLinks()}\n              </div>\n            </li>\n          </ul>\n        </div>\n      </nav>\n    );\n  }\n}\n\nControlPanel.propTypes = {\n  chunks: chunksType.isRequired,\n  match: publicationMatchType.isRequired,\n  fullQuery: queryType.isRequired,\n  linkQuery: queryType.isRequired,\n};\n\nexport default ControlPanel;\n","import ControlPanel from './ControlPanel';\n\nexport default ControlPanel;\n","import queryString from 'query-string';\n\nconst params = [\n  { name: 'w', type: 'array' },\n  { name: 'config', type: 'string', link: true },\n];\n\nconst convertToType = (value, type) => {\n  if (type === 'array' && !Array.isArray(value)) {\n    return [value];\n  }\n\n  return value;\n};\n\nexport const parse = (search) => {\n  const parsed = queryString.parse(search, { arrayFormat: 'comma' });\n  const result = {};\n\n  params.forEach(({ name, type }) => {\n    if (Object.prototype.hasOwnProperty.call(parsed, name)) {\n      result[name] = convertToType(parsed[name], type);\n    }\n  });\n\n  return result;\n};\n\nexport const linkParams = (search) => {\n  const additionalArgs = parse(search);\n  const result = {};\n\n  params.forEach(({ name, type, link }) => {\n    if (link && Object.prototype.hasOwnProperty.call(additionalArgs, name)) {\n      result[name] = convertToType(additionalArgs[name], type);\n    }\n  });\n\n  return result;\n};\n\nexport const buildQueryString = (queryParams) => (\n  queryString.stringify(queryParams, { arrayFormat: 'comma' })\n);\n","import Treebank from './Treebank';\n\nexport default Treebank;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { chunksType, publicationMatchType, locationType } from '../../lib/types';\n\nimport styles from './Treebank.module.css';\n\nimport ArethusaWrapper from '../ArethusaWrapper';\nimport ControlPanel from '../ControlPanel';\n\nimport { parse, linkParams } from '../../lib/params';\n\nclass Treebank extends Component {\n  constructor(props) {\n    super(props);\n\n    this.additionalArgs = this.additionalArgs.bind(this);\n    this.linkQuery = this.linkQuery.bind(this);\n    this.renderArethusa = this.renderArethusa.bind(this);\n  }\n\n  componentDidMount() {\n    this.renderArethusa();\n  }\n\n  componentDidUpdate() {\n    this.renderArethusa();\n  }\n\n  additionalArgs() {\n    const { location: { search } } = this.props;\n\n    return parse(search);\n  }\n\n  linkQuery() {\n    const { location: { search } } = this.props;\n\n    return linkParams(search);\n  }\n\n  renderArethusa() {\n    const {\n      xml,\n      match: { params: { chunk } },\n      arethusa: { render },\n    } = this.props;\n    const additionalArgs = this.additionalArgs();\n\n    render(xml, chunk, additionalArgs);\n  }\n\n  render() {\n    const { chunks, match } = this.props;\n    const linkQuery = this.linkQuery();\n    const fullQuery = this.additionalArgs();\n\n    return (\n      <>\n        <ControlPanel\n          match={match}\n          chunks={chunks}\n          fullQuery={fullQuery}\n          linkQuery={linkQuery}\n        />\n        <div className=\"__artsa\">\n          <div id=\"treebank_container\" className={styles.treebankContainer} />\n        </div>\n      </>\n    );\n  }\n}\n\nTreebank.propTypes = {\n  arethusa: PropTypes.instanceOf(ArethusaWrapper).isRequired,\n  chunks: chunksType.isRequired,\n  match: publicationMatchType.isRequired,\n  location: locationType.isRequired,\n  xml: PropTypes.string.isRequired,\n};\n\nexport default Treebank;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { chunksType, publicationMatchType, locationType } from '../../lib/types';\n\nimport styles from './Publication.module.css';\n\nimport Header from '../Header';\nimport ArethusaWrapper from '../ArethusaWrapper';\nimport Treebank from '../Treebank';\nimport Markdown from '../Markdown';\n\nconst renderText = (text) => {\n  if (Array.isArray(text)) {\n    return (\n      <div>\n        {text.map((t) => (\n          <span key={t}>\n            {t}\n            <br />\n          </span>\n        ))}\n      </div>\n    );\n  }\n\n  return text;\n};\n\nconst renderRow = (title, text) => (\n  <tr>\n    <th scope=\"col\">{title}</th>\n    <td className={styles.publicationRow}>\n      {renderText(text)}\n    </td>\n  </tr>\n);\n\nconst renderLinkRow = (title, link) => (\n  <tr>\n    <th scope=\"col\">{title}</th>\n    <td>\n      <a href={link}>{link}</a>\n    </td>\n  </tr>\n);\n\nconst renderMarkdownRow = (title, markdown) => (\n  <tr>\n    <th scope=\"col\">{title}</th>\n    <td className={styles.publicationRow}>\n      <Markdown source={markdown} />\n    </td>\n  </tr>\n);\n\nconst renderLocusRow = (title, text, publicationPath) => (\n  <tr>\n    <th scope=\"col\">{title}</th>\n    <td className={styles.publicationRow}>\n      {text}\n      {' '}\n      <a href={`../${publicationPath}`}>\n        (See all)\n      </a>\n    </td>\n  </tr>\n);\n\nclass Publication extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      arethusaLoaded: false,\n      subDoc: '',\n    };\n\n    this.setSubdoc = this.setSubdoc.bind(this);\n\n    this.arethusa = new ArethusaWrapper();\n  }\n\n  componentDidMount() {\n    // eslint-disable-next-line no-undef\n    window.document.body.addEventListener('ArethusaLoaded', this.setSubdoc);\n  }\n\n  componentDidUpdate(prevProps) {\n    const { arethusaLoaded } = this.state;\n    const { location } = this.props;\n    const { location: prevLocation } = prevProps;\n\n    if (arethusaLoaded && location !== prevLocation) {\n      this.setSubdoc();\n    }\n  }\n\n  componentWillUnmount() {\n    // eslint-disable-next-line no-undef\n    window.document.body.removeEventListener('ArethusaLoaded', this.setSubdoc);\n  }\n\n  setSubdoc() {\n    const subDoc = this.arethusa.getSubdoc();\n    this.setState({ subDoc, arethusaLoaded: true });\n  }\n\n  render() {\n    const {\n      logo,\n      link,\n      publicationPath,\n      author,\n      work,\n      editors,\n      locus,\n      publicationLink,\n      notes,\n      xml,\n      chunks,\n      match,\n      location,\n    } = this.props;\n\n    const { subDoc } = this.state;\n\n    return (\n      <>\n        <Header logo={logo} link={link}>\n          <span>\n            <i>{work}</i>\n          </span>\n          <ul className=\"navbar-nav ml-auto\">\n            <li className=\"nav-item\">\n              <a className=\"nav-link\" href={`${process.env.PUBLIC_URL}/`}>\n                Home\n              </a>\n            </li>\n          </ul>\n        </Header>\n        <div className=\"container pt-3\">\n          <h2>\n            <span>\n              {author}\n              ,\n              <i>\n                {' '}\n                {work}\n                {' '}\n              </i>\n              {locus}\n            </span>\n          </h2>\n          <table className=\"table\">\n            <tbody>\n              {!!author && renderRow('Author', author)}\n              {!!work && renderRow('Work', work)}\n              {!!locus && renderLocusRow('Locus', locus, publicationPath)}\n              {!!subDoc && renderRow('Reference', subDoc)}\n              {!!editors && renderRow('Editors', editors)}\n              {!!publicationLink && renderLinkRow('Link', publicationLink)}\n              {!!notes && renderMarkdownRow('Notes', notes)}\n            </tbody>\n          </table>\n          <div className={styles.treebankWrapper}>\n            <Treebank\n              xml={xml}\n              chunks={chunks}\n              location={location}\n              match={match}\n              arethusa={this.arethusa}\n            />\n          </div>\n          <div className=\"pt-1 pb-4 text-right\">\n            <a href={`${process.env.PUBLIC_URL}/xml/${xml}`} target=\"_blank\" rel=\"noopener noreferrer\">\n              View XML\n            </a>\n          </div>\n        </div>\n      </>\n    );\n  }\n}\n\nPublication.propTypes = {\n  logo: PropTypes.string,\n  link: PropTypes.string,\n  publicationPath: PropTypes.string.isRequired,\n  author: PropTypes.string.isRequired,\n  work: PropTypes.string.isRequired,\n  editors: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.arrayOf(PropTypes.string),\n  ]).isRequired,\n  locus: PropTypes.string.isRequired,\n  publicationLink: PropTypes.string,\n  notes: PropTypes.string,\n  xml: PropTypes.string.isRequired,\n  chunks: chunksType.isRequired,\n  match: publicationMatchType.isRequired,\n  location: locationType.isRequired,\n};\n\nPublication.defaultProps = {\n  logo: undefined,\n  link: undefined,\n  publicationLink: undefined,\n  notes: undefined,\n};\n\nexport default Publication;\n","import Publication from './Publication';\n\nexport default Publication;\n","import NotFound from './NotFound';\n\nexport default NotFound;\n","import React from 'react';\n\nimport { configType } from '../../lib/types';\n\nimport Header from '../Header';\n\nconst NotFound = ({ config: { logo, link } }) => (\n  <>\n    <Header logo={logo} link={link}>\n      <span>\n        Not Found\n      </span>\n      <ul className=\"navbar-nav ml-auto\">\n        <li className=\"nav-item\">\n          <a className=\"nav-link\" href={`${process.env.PUBLIC_URL}/`}>\n            Home\n          </a>\n        </li>\n      </ul>\n    </Header>\n    <div className=\"container pt-5\">\n      <div className=\"row col-12 pt-5 pb-3\">\n        <div className=\"col-12 text-center\">\n          <h1>Error 404</h1>\n        </div>\n      </div>\n      <div className=\"row col-12 pb-3\">\n        <div className=\"col-12 text-center\">\n          <h2>Publication not found</h2>\n        </div>\n      </div>\n      <div className=\"row col-12 pb-3\">\n        <div className=\"col-12 text-center\">\n          <h2>\n            <a href={`${process.env.PUBLIC_URL}/`}>\n              Return to homepage\n            </a>\n          </h2>\n        </div>\n      </div>\n    </div>\n  </>\n);\n\nNotFound.propTypes = {\n  config: configType.isRequired,\n};\n\nexport default NotFound;\n","import PublicationDirector from './PublicationDirector';\n\nexport default PublicationDirector;\n","import React, { Component } from 'react';\nimport { configType, publicationMatchType, locationType } from '../../lib/types';\n\nimport Publication from '../Publication';\nimport NotFound from '../NotFound';\n\nclass PublicationDirector extends Component {\n  constructor(props) {\n    super(props);\n\n    const { config } = props;\n    const argsLookup = {};\n    const { logo, link } = config;\n\n    config.collections.forEach((collection) => {\n      (collection.publications || []).forEach((publication) => {\n        const {\n          author, work, editors, path: publicationPath,\n        } = publication;\n\n        publication.sections.forEach((section) => {\n          const {\n            path,\n            locus,\n            link: publicationLink,\n            notes,\n            xml,\n            chunks,\n          } = section;\n\n          argsLookup[path] = {\n            logo,\n            link,\n            publicationPath,\n            author,\n            work,\n            editors,\n            locus,\n            publicationLink,\n            notes,\n            xml,\n            chunks,\n          };\n        });\n      });\n    });\n\n    this.argsLookup = argsLookup;\n  }\n\n  render() {\n    const { config, match, location } = this.props;\n    const { publication } = match.params;\n    const args = this.argsLookup[publication];\n\n    if (args === undefined) {\n      return <NotFound config={config} />;\n    }\n\n    return <Publication {...args} match={match} location={location} />;\n  }\n}\n\nPublicationDirector.propTypes = {\n  config: configType.isRequired,\n  match: publicationMatchType.isRequired,\n  location: locationType.isRequired,\n};\n\nexport default PublicationDirector;\n","import PublicationGroup from './PublicationGroup';\n\nexport default PublicationGroup;\n","import React from 'react';\n\nimport { configType } from '../../lib/types';\n\nimport Header from '../Header';\nimport Hero from '../Hero';\nimport Collection from '../Collection';\n\nconst renderCollection = (collection) => {\n  const { title, publications } = collection;\n\n  return (\n    <Collection\n      key={title}\n      title={title}\n      publications={publications}\n    />\n  );\n};\n\nconst PublicationGroup = ({\n  config: {\n    logo,\n    link,\n    title,\n    subtitle,\n    collections,\n  },\n}) => (\n  <>\n    <Header logo={logo} link={link}>\n      {title}\n      <ul className=\"navbar-nav ml-auto\">\n        <li className=\"nav-item\">\n          <a className=\"nav-link\" href={`${process.env.PUBLIC_URL}/`}>\n            Home\n          </a>\n        </li>\n      </ul>\n    </Header>\n    <Hero title={title} subtitle={subtitle} />\n    {collections.map((c) => renderCollection(c))}\n  </>\n);\n\nPublicationGroup.propTypes = {\n  config: configType.isRequired,\n};\n\nexport default PublicationGroup;\n","import PublicationGroupDirector from './PublicationGroupDirector';\n\nexport default PublicationGroupDirector;\n","import React, { Component } from 'react';\n\nimport { configType, publicationGroupMatchType } from '../../lib/types';\n\nimport PublicationGroup from '../PublicationGroup';\nimport NotFound from '../NotFound';\n\nclass PublicationGroupDirector extends Component {\n  constructor(props) {\n    super(props);\n\n    const { config } = props;\n    const argsLookup = {};\n    const {\n      logo,\n      link,\n      title,\n      subtitle,\n      collections,\n    } = config;\n\n    collections.forEach((collection) => {\n      (collection.publications || []).forEach((publication) => {\n        const { path, author, work } = publication;\n\n        argsLookup[path] = {\n          logo,\n          link,\n          title,\n          subtitle,\n          collections: [\n            {\n              title: (\n                <>\n                  {author}\n                  ,\n                  {' '}\n                  <i>{work}</i>\n                </>\n              ),\n              publications: [publication],\n            },\n          ],\n        };\n      });\n    });\n\n    this.argsLookup = argsLookup;\n  }\n\n  render() {\n    const { config, match } = this.props;\n    const { publication } = match.params;\n    const newConfig = this.argsLookup[publication];\n\n    if (newConfig === undefined) {\n      return <NotFound config={config} />;\n    }\n\n    return <PublicationGroup config={newConfig} />;\n  }\n}\n\nPublicationGroupDirector.propTypes = {\n  config: configType.isRequired,\n  match: publicationGroupMatchType.isRequired,\n};\n\nexport default PublicationGroupDirector;\n","import Page from './Page';\n\nexport default Page;\n","import React from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport { PerseidsFooter } from 'perseids-react-components';\n\nimport { configType } from '../../lib/types';\n\nimport Home from '../Home';\nimport PublicationDirector from '../PublicationDirector';\nimport PublicationGroupDirector from '../PublicationGroupDirector';\nimport NotFound from '../NotFound';\n\nconst Page = ({\n  config,\n  config: {\n    copyright,\n    doi,\n    report,\n    github,\n    twitter,\n  },\n}) => (\n  <>\n    <Switch>\n      <Route exact path=\"/\" component={() => <Home config={config} />} />\n      <Route exact path=\"/:publication/\" render={(props) => <PublicationGroupDirector {...props} config={config} />} />\n      <Route exact path=\"/:publication/:chunk\" render={(props) => <PublicationDirector {...props} config={config} />} />\n      <Route path=\"/\" component={() => <NotFound config={config} />} />\n    </Switch>\n    <PerseidsFooter\n      copyright={copyright}\n      doi={doi}\n      report={report}\n      github={github}\n      twitter={twitter}\n    />\n  </>\n);\n\nPage.propTypes = {\n  config: configType.isRequired,\n};\n\nexport default Page;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Redirect } from 'react-router-dom';\nimport {\n  MessagingService,\n  ResponseMessage,\n  WindowIframeDestination as Destination,\n} from 'alpheios-messaging';\nimport { buildQueryString } from '../../lib/params';\n\nimport ArethusaWrapper from '../ArethusaWrapper';\n\nconst config = {\n  name: 'treebank',\n  targetIframeID: 'string-not-used',\n  targetURL: 'string-not-used',\n  commModes: [Destination.commModes.RECEIVE],\n};\n\nconst error = (request, message, code) => ResponseMessage.Error(request, new Error(message), code);\n\nconst redirectLink = ({ wordIds, config: c, sentenceId }) => {\n  const query = buildQueryString({ w: wordIds, config: c });\n\n  if (query === '') {\n    return sentenceId;\n  }\n\n  return `${sentenceId}?${query}`;\n};\n\nclass TreebankService extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      arethusaLoaded: false,\n      redirectTo: null,\n    };\n    this.messageHandler = this.messageHandler.bind(this);\n    this.setArethusaLoaded = this.setArethusaLoaded.bind(this);\n  }\n\n  componentDidMount() {\n    this.destination = new Destination({ ...config, receiverCB: this.messageHandler });\n    this.service = new MessagingService('treebank-service', this.destination);\n\n    // eslint-disable-next-line no-undef\n    window.document.body.addEventListener('ArethusaLoaded', this.setArethusaLoaded);\n  }\n\n  componentWillUnmount() {\n    this.destination.deregister();\n\n    // eslint-disable-next-line no-undef\n    window.document.body.removeEventListener('ArethusaLoaded', this.setArethusaLoaded);\n  }\n\n  setArethusaLoaded() {\n    this.setState({ arethusaLoaded: true });\n  }\n\n  messageHandler(request, responseFn) {\n    const { arethusa } = this.props;\n    const { arethusaLoaded } = this.state;\n    const { body } = request;\n    const [name] = Object.keys(body);\n\n    if (!arethusaLoaded) {\n      responseFn(error(request, 'Arethusa is Not Loaded', ResponseMessage.errorCodes.SERVICE_UNINITIALIZED));\n      return;\n    }\n\n    try {\n      switch (name) {\n        case 'gotoSentence':\n          this.setState({\n            redirectTo: redirectLink(body.gotoSentence),\n          });\n\n          responseFn(ResponseMessage.Success(request, { status: 'success' }));\n          break;\n        case 'getMorph':\n          responseFn(ResponseMessage.Success(\n            request,\n            arethusa.getMorph(body.getMorph.sentenceId, body.getMorph.wordId),\n          ));\n          break;\n        case 'refreshView':\n          responseFn(ResponseMessage.Success(request, arethusa.refreshView()));\n          break;\n        case 'findWord':\n          responseFn(\n            ResponseMessage.Success(\n              request,\n              arethusa.findWord(\n                body.findWord.sentenceId,\n                body.findWord.word,\n                body.findWord.prefix,\n                body.findWord.suffix,\n              ),\n            ),\n          );\n          break;\n        default:\n          responseFn(error(request, `Unsupported request: ${name}`, ResponseMessage.errorCodes.UNKNOWN_REQUEST));\n      }\n    } catch (err) {\n      responseFn(ResponseMessage.Error(request, err, ResponseMessage.errorCodes.INTERNAL_ERROR));\n    }\n  }\n\n  render() {\n    const { redirectTo } = this.state;\n\n    return (\n      redirectTo && <Redirect to={redirectTo} />\n    );\n  }\n}\n\nTreebankService.propTypes = {\n  arethusa: PropTypes.instanceOf(ArethusaWrapper).isRequired,\n};\n\nexport default TreebankService;\n","import TreebankService from './TreebankService';\n\nexport default TreebankService;\n","import EmbeddedTreebank from './EmbeddedTreebank';\n\nexport default EmbeddedTreebank;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { publicationMatchType, locationType } from '../../lib/types';\n\nimport styles from './EmbeddedTreebank.module.css';\n\nimport ArethusaWrapper from '../ArethusaWrapper';\nimport TreebankService from '../TreebankService';\n\nimport { parse } from '../../lib/params';\n\nclass EmbeddedTreebank extends Component {\n  componentDidMount() {\n    this.renderArethusa();\n  }\n\n  componentDidUpdate() {\n    this.renderArethusa();\n  }\n\n  renderArethusa() {\n    const {\n      xml,\n      match: { params: { chunk } },\n      arethusa: { render },\n      location: { search },\n    } = this.props;\n    const additionalArgs = parse(search);\n\n    render(xml, chunk, additionalArgs);\n  }\n\n  render() {\n    const { match, arethusa } = this.props;\n    const { params: { publication, chunk } } = match;\n\n    return (\n      <>\n        <div className=\"__artsa\">\n          <div id=\"treebank_container\" className={styles.treebankContainer} />\n        </div>\n        <div className={styles.links}>\n          <a href={`${process.env.PUBLIC_URL}/${publication}/${chunk}`} target=\"_blank\" rel=\"noopener noreferrer\">\n            Credits and more information\n          </a>\n        </div>\n        <TreebankService arethusa={arethusa} />\n      </>\n    );\n  }\n}\n\nEmbeddedTreebank.propTypes = {\n  arethusa: PropTypes.instanceOf(ArethusaWrapper).isRequired,\n  match: publicationMatchType.isRequired,\n  location: locationType.isRequired,\n  xml: PropTypes.string.isRequired,\n};\n\nexport default EmbeddedTreebank;\n","import EmbeddedPublication from './EmbeddedPublication';\n\nexport default EmbeddedPublication;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { publicationMatchType, locationType } from '../../lib/types';\n\nimport ArethusaWrapper from '../ArethusaWrapper';\nimport EmbeddedTreebank from '../EmbeddedTreebank';\n\nclass EmbeddedPublication extends Component {\n  constructor(props) {\n    super(props);\n\n    this.arethusa = new ArethusaWrapper();\n  }\n\n  render() {\n    const {\n      xml,\n      match,\n      location,\n    } = this.props;\n\n    return (\n      <div>\n        <EmbeddedTreebank\n          xml={xml}\n          location={location}\n          match={match}\n          arethusa={this.arethusa}\n        />\n      </div>\n    );\n  }\n}\n\nEmbeddedPublication.propTypes = {\n  xml: PropTypes.string.isRequired,\n  match: publicationMatchType.isRequired,\n  location: locationType.isRequired,\n};\n\nexport default EmbeddedPublication;\n","import EmbeddedNotFound from './EmbeddedNotFound';\n\nexport default EmbeddedNotFound;\n","import React from 'react';\n\nconst EmbeddedNotFound = () => (\n  <div className=\"container pt-5\">\n    <div className=\"row col-12 pt-5 pb-3\">\n      <div className=\"col-12 text-center\">\n        <h1>Error 404</h1>\n      </div>\n    </div>\n    <div className=\"row col-12 pb-3\">\n      <div className=\"col-12 text-center\">\n        <h2>Publication not found</h2>\n      </div>\n    </div>\n  </div>\n);\n\nexport default EmbeddedNotFound;\n","import EmbeddedPublicationDirector from './EmbeddedPublicationDirector';\n\nexport default EmbeddedPublicationDirector;\n","import React, { Component } from 'react';\nimport { configType, publicationMatchType, locationType } from '../../lib/types';\n\nimport EmbeddedPublication from '../EmbeddedPublication';\nimport EmbeddedNotFound from '../EmbeddedNotFound';\n\nclass EmbeddedPublicationDirector extends Component {\n  constructor(props) {\n    super(props);\n\n    const { config } = props;\n    const argsLookup = {};\n\n    config.collections.forEach((collection) => {\n      (collection.publications || []).forEach((publication) => {\n        publication.sections.forEach((section) => {\n          const { path, xml } = section;\n\n          argsLookup[path] = { xml };\n        });\n      });\n    });\n\n    this.argsLookup = argsLookup;\n  }\n\n  render() {\n    const { config, match, location } = this.props;\n    const { publication } = match.params;\n    const args = this.argsLookup[publication];\n\n    if (args === undefined) {\n      return <EmbeddedNotFound config={config} />;\n    }\n\n    const { xml } = args;\n\n    return <EmbeddedPublication xml={xml} match={match} location={location} />;\n  }\n}\n\nEmbeddedPublicationDirector.propTypes = {\n  config: configType.isRequired,\n  match: publicationMatchType.isRequired,\n  location: locationType.isRequired,\n};\n\nexport default EmbeddedPublicationDirector;\n","import Embedded from './Embedded';\n\nexport default Embedded;\n","import React from 'react';\nimport { Route, Switch } from 'react-router-dom';\n\nimport { configType } from '../../lib/types';\n\nimport EmbeddedPublicationDirector from '../EmbeddedPublicationDirector';\nimport EmbeddedNotFound from '../EmbeddedNotFound';\n\nconst Embedded = ({ config }) => (\n  <Switch>\n    <Route exact path=\"/embed/:publication/:chunk\" render={(props) => <EmbeddedPublicationDirector {...props} config={config} />} />\n    <Route path=\"/\" component={() => <EmbeddedNotFound config={config} />} />\n  </Switch>\n);\n\nEmbedded.propTypes = {\n  config: configType.isRequired,\n};\n\nexport default Embedded;\n","import App from './App';\n\nexport default App;\n","import React from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\n\nimport config from '../../config.json';\n\nimport Page from '../Page';\nimport Embedded from '../Embedded';\n\nconst App = () => (\n  <Router basename={process.env.PUBLIC_URL}>\n    <Switch>\n      <Route path=\"/embed/\" component={() => <Embedded config={config} />} />\n      <Route path=\"/\" component={() => <Page config={config} />} />\n    </Switch>\n  </Router>\n);\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'perseids-react-components/build/css/index.css';\n\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"publicationRow\":\"Publication_publicationRow__3taiJ\",\"treebankWrapper\":\"Publication_treebankWrapper__2KYz-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"treebankContainer\":\"EmbeddedTreebank_treebankContainer__2X6pS\",\"links\":\"EmbeddedTreebank_links__1ndYN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"jumbotronSmall\":\"Hero_jumbotronSmall__IN8kP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"treebankContainer\":\"Treebank_treebankContainer__sQn_K\"};"],"sourceRoot":""}